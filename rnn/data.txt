sudo apt update
sudo apt upgrade
sudo apt update
apt list --upgradable
sudo apt upgrade --upgradable
sudo apt update --upgradable
sudo apt install --upgradable
sudo apt install $(apt list --upgradable)
apt list --upgradable
sudo apt upgrade sudo apt install flatpak
sudo apt upgrade gnome-text-editor
apt list --upgradable
sudo apt upgrade language-pack-en-base language-pack-en libp11-kit0 libpython3-stdlib p11-kit-modules p11-kit python-apt-common python3-apt python3-minimal python3 zlib1g
clear
sudo apt install flatpack
sudo apt install flatpak
python3 --version
clear
sudo apt install gbitorrent
sudo apt install qbitorrent
sudo apt install qBitorrent
sudo apt install qbittorrent
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
sudo apt upgrade
sudo apt update
systemctl restart now
systemctl reboot now
systemctl reboot 
cd OpenJDK21U-jdk_x64_linux_hotspot_21.0.4_7/
ls
cd jdk-21.0.4+7/
ls
cd bin
ls
cd ..
ls
cd .. 
ls
cp jdk-21.0.4+7/ /usr/lib/jvm/
cp -r jdk-21.0.4+7/ /usr/lib/jvm/
sudo cp -r jdk-21.0.4+7/ /usr/lib/jvm/
java --version
java
gcc
gcc --version
cd ~
ls
cd /usr/lib
ls
cd jvm
mkdir jvm
sudo mkdir jvm
cd jvm
ls
cd jdk-21.0.4+7/
ls
cd lib
ls
cd ..
ls
cd include
ls
cd ..
echo $PATH
PATH=$PATH:/usr/lib/jvm/jdk-21.0.4+7
echo $PATH
JAVA_HOME="/usr/lib/jvm/jdk-21.0.4+7"
echo JAVA_HOME
echo $JAVA_HOME
apt search jdk
sudo apt install jdk
sudo apt install default-
sudo apt install default-jdk
ls
cd ..
ls
sudo rm .r jdk-21.0.4+7/
sudo rm -r jdk-21.0.4+7/
ls
java --version
java -version
echo $PATH
ls
echo $PATH
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
echo $PATH
clear
rm -r $(ls)
ls
sudo rm -r $(ls)
pip3 install poetry
sudo apt install python3-pip
pip3 install poetry
sudo pip3 install poetry
pipx install poetry
sudo apt install pipx
pipx install poetry
sudo apt search docker
sudo apt install docker.io
sudo apt install vlc
git
wget
cd Desktop
ls
clear
git
clear
git config --global user.name "hamza-rx12"
git config --global user.email "alaoui.hamza2002@gmail.com"
git config --list
mkdir github-repos
cd github-repos/
ls
git clone https://github.com/hamza-rx12/pypro.git
git remote set-url origin https://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@github.com/hamza-rx12/pypro
git remote set-url origin https://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@github.com/hamza-rx12/pypro.git
git remote set-url origin https://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@github.com/hamza-rx12/pypro
git status
cd pypro/
git remote set-url origin https://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@github.com/hamza-rx12/pypro
clear
git status
clear
cave
curl -fsSL https://rpm.nodesource.com/setup_current.x -o nodesource_setup.sh
sudo apt install curl
curl -fsSL https://rpm.nodesource.com/setup_current.x -o nodesource_setup.sh
bash nodesource_setup.sh
ls
rm nodesource_setup.sh 
curl -fsSL https://deb.nodesource.com/setup_current.x -o nodesource_setup.sh
bash nodesource_setup.sh
sudo apt upgrade
sudo bash nodesource_setup.sh
apt-get install -y nodejs
sudo apt-get install -y nodejs
node -v
node
sudo find / *.nmconnection
sudo find / COFFE%20CUPS_5G
sudo find / *COFFE%20CUPS_5G*
sudo find / -name "*COFFE%20CUPS_5G*"
cp
cp --help
clear
ls
sudo cp netplan-NM-2b003bd1-14f2-44e9-9bc5-129320398b9c-motorola%20edge%2040_7929.nmconnection /run/NetworkManager/system-connections/
cd
ls
rm nodesource_setup.sh 
ls
cd ..
ls
cd linuxbrew/
ls
ls -la
cd .linuxbrew/
ls
cd bin
brew
sudo apt install homebrew
sudo apt install brew
ls
ls -l
echo $PATH
PATH=$PATH:/home/linuxbrew/.linuxbrew/bin/brew
brew
echo $PATH
brew
PATH=/home/natsu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
echo $PATH
(echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/natsu/.bashrc
brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew
echo $PATH
brew install pyenv
pyenv
pyenv versions
pyenv version
pyenv global 3.12.3
sudo apt install python-is-python3
pyenv version
sudo apt search discord
ls
poetry build
ls
ls -ka
ls -la
source .venv/bin/activate
poetry build
poetry build .
poetry 
ls
cat pyproject.toml 
python3 -version
python3 --version
poetry --version
{s
ls
cat pyproject.toml 
poetry install
ls
main.py
python3 main.py
deacrivate
deactivate
pip3 install pyenv
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
sudo apt-get install build-essential
brew install pyenv
python --version
python3 --version
clear
source .venv/bin/activate
poetry install 
ls 
cat pyproject.toml 
python3 main.py
poetry install --no-root
python3 main.py
cat main.py
uvicorn main:app
ls -la
deactivate
uvicorn main:app
source .venv/bin/activate
uvicorn main:app
python
node
npm
sudo apt install wifite
sudo apt install wifite
cd Desktop
ls
cd github-repos/
ls
git clone
git clone https://github.com/derv82/wifite.git
git clone https://github.com/SilentGhostX/HT-WPS-Breaker.git
git clone https://github.com/FluxionNetwork/fluxion.git
ls -l
git clone https://github.com/FluxionNetwork/fluxion.git
ls -l
git clone https://github.com/FluxionNetwork/fluxion.git
ls
cd wifite
ls
python3 wifite.py 
cat readme.md 
ls -l
./wifite.py
sudo ./wifite.py
sudo apt install wifite
brew
brew install wifite
cd ..
ls
cd HT-WPS-Breaker/
ls
ls-l
ls -l
./HT-WB.sh 
sudo ./HT-WB.sh 
git clone https://github.com/FluxionNetwork/fluxion.git
ifconfig
sudo apt install net-tools
apt --fix-broken install
sudo apt --fix-broken install
sudo apt install net-tools
ifconfig
sudo apt install wifite
sudo apt install fluxion
sudo apt install linset
cd ..
git clone https://github.com/FluxionNetwork/fluxion.git
cd Desktop/github-repos/
ls
git clone https://github.com/FluxionNetwork/fluxion.git
git clone git@github.com:FluxionNetwork/fluxion.git
git clone https://www.github.com/FluxionNetwork/fluxion.git
ls
make install
make 
ls
cd ..
ls
rm -r hashcat-6.2.6
sudo rm -r hashcat-6.2.6
ls
$ git clone https://github.com/hashcat/hashcat.git
git clone https://github.com/hashcat/hashcat.git
ls
ls -l
cd Desktop/github-repos/
git clone https://www.github.com/FluxionNetwork/fluxion.git
cd fluxion
ls
./fluxion.sh
sudo ./fluxion.sh
sudo ./fluxion.sh -i
ls
wifite
sudo wifite
airmon-ng stop wlo1mon
cd ..
ls
sudo wifite
sudo apt install bully
airmon-ng stop wlo1mon
sudo airmon-ng stop wlo1mon
sudo apt install bully
git clone  https://github.com/kimocoder/bully
brew install bully
sudo wifite
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
ls
make install
hashcat
sudo make install
hashcat
sudo wifite
cd ..
git clone https://github.com/kimocoder/bully.git
ls
cd bully
ls
cd src
ls
make
make install
sudo make install
ls
cd ..
ls
make
make install
cat README.md 
sudo apt install bully
sudo wifite
cd Downloads
git clone https://github.com/ZerBea/hcxtools.git
cd hcxtools
ls
sudo make install
make -j $(nproc)
sudo make -j $(nproc)
sudo apt install hcxpcapngtool
pip3 install hcxpcapngtool
sudo wifite
git clone https://github.com/ZerBea/hcxdumptool.git
cd hcxdumptool
make 
make -j $(nproc)
make 
make install
sudo make install
sudo wifite
airmon-ng stop wlx984827e0c363
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlo1mon
sudo wifite
sudo apt install bully 
sudo apt install hcxdumptool
sudo apt install hcxtools
sudo airmon-ng stop wlo1mon
ls
cd Desktop/
ls
cd github-repos/
ls
rm -r wifite
ls
sudo rm -r wifite
ls
la pypro
cd pypro/
ls
python Image_Master.py 
python3 Image_Master.py 
ls
clear
ls
poetry init
ls
python3 -m venv .venv
source .venv/bin/activate
poetry add customtkinter
python3 Image_Master.py 
poetry add opencv
poetry add cv2
poetry add openCv
poetry add openCV
poetry add opencv-python
poetry add pillow
poetry add tkinter
poetry add tk
python3 Image_Master.py 
clear
ls
npx
ls
sudo wifite
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlx984827e0c363
cd ..
ls
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
cd Desktop/github-repos/
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
cd ..
cd fluxion/
ls
./fluxion.sh 
sudo ./fluxion.sh 
cd Desktop/github-repos/HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
sudo wifite
sudo ./HT-WB.sh 
/bin/python3 /home/natsu/test_python.py
ls
python
clear
ls
python test_python.py 
ls 
cd Desktop
ls
cd ..
ls
docker
docker pull athithya01/valorant
sudo docker pull athithya01/valorant
docker
docker -a
docker ps -a
sudo docker ps -a
sudo docker images
sudo docker rm athithya01/valorant 
sudo docker rmi athithya01/valorant 
sudo docker images
clear
wine
sudo apt install wine
sudo groupadd docker
sudo usermod -aG docker $USER
docker run hello-world
newgrp docker
docker 
docker run hello-world
ls
touch test.py
vim test.py
sudo apt install vim
vim test.py
python3 test.py
code test.py
xinput list
sudo apt update && sudo apt upgrade
/bin/python3 /home/natsu/test.py
chsh -s /bin/sh
echo $SHELL
chsh -s /bin/zsh
chsh -s /bin/sh
echo $SHEL
echo $SHELl
echo $SHELL
sudo systemctl start gdm
sudo systemctl start gdm3
mlightdm
python3
alsamixer
python3
/bin/python3 /home/natsu/testt.py
print(len(""))
python3 print(len(""))
python3 
/bin/python3 /home/natsu/prob6.py
python3
/bin/python3 /home/natsu/prob5.py
/bin/python3 /home/natsu/prob6.py
/bin/python3 /home/natsu/prob7.py
/bin/python3 /home/natsu/prob8.py
sudo apt install imwheel
bash <(curl -s http://www.nicknorton.net/mousewheel.sh)
bash <(curl -s https://gist.githubusercontent.com/AshishKapoor/6f054e43578659b4525c47bf279099ba/raw/0b2ad8b67f02ebb01d99294b0ecb6feacc078f67/mousewheel.sh)
wget https://gist.githubusercontent.com/AshishKapoor/6f054e43578659b4525c47bf279099ba/raw/0b2ad8b67f02ebb01d99294b0ecb6feacc078f67/mousewheel.sh
ls
zenity
zenity --scale
sudo add-apt-repository multiverse
sudo apt update && sudo apt install ttf-mscorefonts-installer
ls
wine
wine AbzuGame.exe
wine UplayLaunch.exe 
dpkg --add-architecture i386 && apt-get update && apt-get install wine32:i386
sudo dpkg --add-architecture i386 && apt-get update && apt-get install wine32:i386
sudo su
wine UplayLaunch.exe 
sudo wine UplayLaunch.exe 
wine UplayLaunch.exe 
su
sudo su
whereis wine
sudo apt-get install wine1.5
export WINEARCH=win32
export WINEPREFIX=~/.wine/win32
winecfg
winetricks
sudo apt install winetricks
winetricks
wine Dauntless.exe 
sudo wine Dauntless.exe 
ls
cd ..
ls
cd ABZU/
ls
wine AbzuGame.exe
wine AbzuGame.exe 
sudo wine AbzuGame.exe
wine AbzuGame.exe 
wine32 AbzuGame.exe 
sudo apt install wine32
wine32 AbzuGame.exe 
cd Desktop
ls
cd github-repos/
ls
code .
pipx
poetry
poetry list
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
docker ps -a
docker exec -it 091e7cbebf24 /bin/bash
cat /etc/group
sudo usermod -aG docker $USER
docker 
docker ps -a
clear
docker pull container-registry.oracle.com/database/free:latest
docker
docker images
docker pull container-registry.oracle.com/database/free:latest
docker images
docker run e1ff84cf03ed
docker run -d -p 1521:1521 -p 5500:5500 --name oracle-db container-registry.oracle.com/database/free
docker exec oracle-db ./setPassword.sh oracle
docker exec -it oracle-db /bin/bash
docker ps -a
docker rm 091e7cbebf24
docker ps -a
docker pull
container-registry.oracle.com/database/enterprise:latest
docker pull container-registry.oracle.com/database/enterprise:latest
docker login container-registry.oracle.com
docker pull container-registry.oracle.com/database/enterprise:latest
docker images
docker run -d -p 1521:1521 -p 5500:5500 --name oracle container-registry.oracle.com/database/enterprise
docker run -d -p 1521:1521  --name oracle container-registry.oracle.com/database/enterprise
docker run -d -p 1521:1521 -p 5500:5500 --name oracle container-registry.oracle.com/database/enterprise
docker exec oracle ./setPassword.sh oracle
docker run -it oracle /bin/bash
docker exec -it oracle /bin/bash
docker images
docker ps -a
docker rm oracle
docker ps -a
docker rm oracle
docker ps 
docker stop oracle-db
docker ps 
docker ps -a
docker rm oracle
docker ps 
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
jupyter notebook
sudo apt search jupyter-core
sudo apt search jupyter
sudo apt search jupyter-core
sudo apt install jupyter-core
jupyter notebook
jupyter-notebook
jupyter
jupyter notebook
sudo apt purge jupyter-core
pip3 install notebook
pipx install notebook
jupyter notebook
jupyter-notebook
pipx
pipx uninstall notebook
sudo pip3 install --upgrade pip
pip3 install jupyter
pipx install jupyter
jupyter
jupyter notebook
jupyter 
jupyter-notebook
pipx install jupyter
jupyter-notebook
pipx uninstall jupyter
pipx 
pipx uninstall jupyter-note
pipx install jupyter
pipx uninstall jupyter
pip3
pip3 install notebook
sudo apt install python3-pip
sudo apt autoremove
sudo apt install python3-pip
pip install notebook
sudo pip install notebook
sudo apt install python3-notebook
sudo apt install python3-jupyter-notebook
pipx install notebook
jupyter-notebook
python3 -m pip install notebook
sudo python3 -m pip install notebook
sudo apt update
sudo apt upgrade
sudo apt remove python3-pip
sudo apt update
sudo apt install python3-pip
python3-pip
sudo apt install python3-pip
pip install notebook
python3 -m pip install notebook
pipx install notebook
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
pip freez
pip freese
pip frese
pip freaze
pip freeze
jupyter-notebook
pip install numpy
pip install pandas
"/media/natsu/d8ba997f-f460-4db2-9796-095bdb42ecd1/my projects/my_fastApi/.venv/bin/python" /home/natsu/testtt.py
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/deactivate/bash/envVars.txt
"/media/natsu/d8ba997f-f460-4db2-9796-095bdb42ecd1/my projects/my_fastApi/.venv/bin/python" /home/natsu/testtt.py
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
ls
exit
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/deactivate/bash/envVars.txt
xinput
xinput enable 13
xinput enable 2
sudo apt install lowfi
sudo apt search lowfi
snap install lowfi
sudo apt install cargo
cargo install lowfi
lowfi
export CARGO_TARGET_DIR=~/cargo
cargo install lowfi
lowfi
mkdir cargo
cargo install lowfi
cargo
git clone https://github.com/talwat/lowfi
ls
cd lowfi/
ls
cd src
ls
cargo run main.rs
lowfi
cargo install main.rs
cargo install
cargo install *
lowfi
ls
cd player
ls
cargo install lowfi
/bin/python3 -m pip install ipykernel -U --user --force-reinstall
jupyter notebook
jupyter-notebook
export CARGO_TARGET_DIR=""
sudo apt purge cargo
sudo apt autoremove cargo
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustc --version
cargo --version
rust --version
rustc --version
cargo --version
ls
cd lowfi/
ls
cargo install
cargo build
alsa
lowfi
cd lowfi/
ls
cd src
ls
rustc main.rs
clear
ls
cd ..
ls
cargo build
alsa.pc
alsa
alsa --help
alsa --version
sudo apt install alsa-sys
cargo install alsa-sys
sudo apt-get install libasound2-dev
ls
cargo build
sudo apt-get install pkg-config
cargo clean
cargo build
export PKG_CONFIG_PATH=/path/to/alsa/lib/pkgconfig
cargo clean
cargo build
cd lowfi/
ls
cargo clean
cargo build
cargo build --verbose
sudo apt-get install libasound2-dev
pkg-config --modversion alsa
find /usr/ -name alsa.pc
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/alsa.pc
cargo clean
cargo build
sudo apt-get install pkg-config
cd lowfi/
ls
cargo clean
cargo build
dpkg -l | grep libasound2-dev
dpkg -l | grep pkg-config
find /usr/ -name alsa.pc
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
cargo clean
cargo build
lowfi
echo 'export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig' >> ~/.bashrc
source ~/.bashrc
lowfi
cargo install lowfi
lowfi
/usr/bin/python3 -m pip install ipykernel -U --user --force-reinstall
jupyter-notebook
lowfi
sudo systemctl hibernate
sudo vim /etc/systemd/logind.conf
sudo blkid | grep swap
sudo nano /etc/default/grub
sudo nano /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo vim /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo su
clear
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo mkdir /etc/polkit-1/localauthority/50-local.d/
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo ls -r /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo mkdir -r /etc/polkit-1/localauthority/50-local.d/
sudo mkdir -f /etc/polkit-1/localauthority/50-local.d/
mkdir --help
sudo mkdir -p /etc/polkit-1/localauthority/50-local.d/
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo vim /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
journalctl -xe
sudo apt update
sudo apt upgrade
sudo apt --fix-broken install
sudo apt upgrade
ls
cd Desktop
ls
cd new
ls
cd ..
ls
cd github-repos/
ls
cd youtube_video_on_terminal/
ls
ls -la
cd ~
ls
cd Downloads/
ls
cd /
ls
cd dev
ls
cd
cd /
ls
cd media
ls
cd natsu
ls
cd d8ba997f-f460-4db2-9796-095bdb42ecd1/
ls
cd my\ projects/
ls
cd my_fastApi/
ls
cd .venv
ls
cd bin
ls
source activate
sudo apt install notion
notion
sudo apt autoremove notion
ls
ls -la
journal -xe
journaling -xe
jornaling -xe
journalctl -xe
sudo apt update
sudo apt upgrade
sudo ubuntu-drivers autoinstall
docker ps -a
docker sta
docker ps -a
docker ps 
/bin/python3 -m pip install ipykernel -U --user --force-reinstall
pipx install ipykernel -U --user --force-reinstall
pipx -i
pipx -h
pipx install ipykernel -U --user --force-reinstall
pipx install ipykernel -U --user 
ls
ls -la
jupyter-notebook
sudo systemctl hibernate
docker ps
dpkg -i mongodb-compass_1.44.5_amd64.deb 
sudo dpkg -i mongodb-compass_1.44.5_amd64.deb 
mongo-compass
mongodb-compass
docker exec -it oracle bash
git clone https://github.com/notion-enhancer/notion-repackaged.git
cd notion-repackaged
./install.sh
cd notion-repackaged
ls
./notion-repackaged.sh 
echo "deb [trusted=yes] https://apt.fury.io/notion-repackaged/ /" | sudo tee /etc/apt/sources.list.d/notion-repackaged.list
sudo apt update
sudo apt install notion-app-enhanced
sudo apt install notion-app
sudo apt purge notion-app-enhanced
notion-app
sudo apt purge notion-app
sudo apt search obsedian
sudo apt search obsidian
sudo rm /etc/apt/sources.list.d/notion-repackaged.list
sudo apt update
sudo autoremove
sudo apt autoremove
sudo apt search evernote
sudo apt search everdo
sudo systemctl hibernate
docker ps
docker exec oracle 
docker exec oracle /bin/bash
docker exec -itd oracle /bin/bash
docker exec -it oracle /bin/bash
mongosh
sustemctl start mongod
systemctl start mongod
gnupg
curl
sudo apt-get install gnupg curl
gnupg
curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc |    sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg    --dearmor
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
sudo apt update
sudo apt-get install -y mongodb-org
mongosh
sudo systemctl start mongod
mongosh
sudo systemctl daemon-reload
mongosh
sudo systemctl start mongod
mongosh
sudo systemctl enable mongod
mongosh
sudo systemctl restart mongod
mongosh
sudo apt install mongo-compass
sudo apt install mongodb-compass
journalctl -xe
sudo apt purge nvidia*
sudo apt install xserver-xorg-video-intel
sudo prime-select intel
audo apt autoremove
sudo apt autoremove
sudo apt install xserver-xorg-video-intel
sudo prime-select intel
sudo apt install prime-select
sudo apt search prime-select
sudo apt search prime
sudo apt install xserver-xorg-video-intel
lspci -k | grep -EA3 'VGA|3D|Display'
sudo nano /etc/default/grub
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
lspci -k | grep -EA3 'VGA|3D|Display'
lspci | grep -E "VGA|3D|Display"
neofech
sudo apt search neofet
sudo apt install neofetch
neofetch
sudo prime-select
sudo apt install xserver-xorg-video-intel
prime-select
sudo apt install nvidea-prime
sudo apt install nvidia-prime
sudo prime-select intel
sudo reboot
prime-select
nvidia-prime
prime-select query
sudo systemctl hibernate
brew install --cask notion
brew install notion
wget https://notion.davidbailey.codes/notion-linux.list
sudo mv notion-linux.list /etc/apt/sources.list.d/notion-linux.list
sudo apt update && sudo apt install notion-desktop
wget https://notion.davidbailey.codes/notion-linux.list
git clone https://github.com/vtenfys/notion-linux.git
cd notion-linux/
ls
cat README.md 
scripts/build.sh 
npm --version
scripts/build.sh 
scripts/package-deb.sh 
docker ps 
docker start oracle
docker ps
sudo systemctl hibernate
docker start oracle
sudo apt install update
sudo apt update
sudo apt upgrade
ubuntu-drivers devices
sudo ubuntu-drivers autoinstall
sudo prime-select intel
ubuntu-drivers devices
apt search nvidia.¿-driver
apt search nvidia-driver
sudo apt remove --purge '^nvidia-.*'
sudo apt install xserver-xorg-video-nouveau
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
sudo vim /etc/modprobe.d/nvidia-blacklist.conf
sudo update-initramfs -u
sudo reboot
sudo blkid | grep swap
sudo ubuntu-drivers install
sudo vim /etc/initramfs-tools/conf.d/resume
sudo update-initramfs -u
sudo apt upgrade
sudo reboot
sudo vim /etc/initramfs-tools/conf.d/resume
sudo update-initramfs -u
sudo reboot
journalctl
sudo ubuntu-drivers install
sudo apt update
sudo apt upgrade
sudo reboot
poweroff
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
sudo systemctl hibernate
docker ps
docker start oracle
docker ps
sudo apt install nvim
sudo apt install neovim
neovim
nvim
nvim pa.py
python3 pa.py
nvim pa.py
upower -e
upower -i /org/freedesktop/UPower/devices/battery_BAT0
susdo systemctl hibernate
sudo systemctl hibernate
poweroff
docker start oracle
docker ps
lowfi
docker pull bitnami/kafka
docker ps
docker start oracle
jupyter-notebook
python3
jupyter-notebook
xinput 
xinput disable 11
xinput enable 11
xinput disable 12
xinput enable 12
cd /etc
ls
cd apt
ls
cat sources.list.d
cd sources.list.d
ls
cat mongodb-org-8.0.list 
vim mongodb-org-8.0.list 
vim ubuntu.sources
code
docker start oracle
docker exec -itd oracle bash
docker exec -itd oracle /bin/bash
docker exec -it oracle /bin/bash
docker exec -it --env TERM=xterm oracle /bin/bash
pip3 install openai
sudo apt install python3-openai
pip freeze
cd Desktop/
ls
vim nemotron_api_key.txt
nemotron.py
vim nemotron.py
python3 nemotron.py
pip install openai
ls -la
pipx install openai
python3 nemotron.py
pip --list
pip -list
pip --freeze
pip --freez
pip --freese
pip --help
pip freeze
pipx install openai
python3 nemotron.py
python -m venv test_env
source test_env/bin/activate
pip install openai
python3 nemotron.py
clear
ls
vim nemotron.py
python3 nemotron.py
vim nemotron.py
python3 nemotron.py
mv nemotron.py nemo.py
vim nemo.py
python3 nemotron.py
python3 nemo.py
vim nemo.py
python3 nemo.py
vim nemo.py
python3 nemo.py
vim nemo.py
lsusb
cat nemotron_api_key.txt 
jupyter-notebook
cd Downloads/
ls
cat penguins_classification.csv
sudo systemctl hibernate
sudo systemctl hibernate
jupyter-notebook
ls /var/log/syslog
ls -l /var/log/syslog
cat /var/log/syslog
cat .bash_history 
cat .vimrc
vim .vimrc
vim
ls
rm .vimrc
vim .vimrc
rm .vimrc
vim .vimrc
jupyter-notebook
vim test.py
cat .bash_history
wc -l .bash_history
ls
cd Desktop
ls
mkdir ml_project
ls
cd ml_project/
clear
ls
vim test.py
python3 -m venv env
source env/bin/activate
clear
python3 test.py
pip install tensorflow
python3 test.py
pip freze
pip freeze
python3 test.py
vim test.py
python3 test.py
vim test.py 
python3 test.py
vim test.py 
python3 test.py
export TF_ENABLE_ONEDNN_OPTS=0
python3 test.py
cat .bash_history
~/cat *.bash_history
cat ~/.bash_history
clear
python3 test.py
cat test.py 
python3 test.py
source env/bin/activate
clear
vim test1.py
cat .bash_history
vim test_data.txt
python3
cd Desktop
ls
cd ml_project/
ls
touch test1.py
source env/bin/activate
vim test1.py 
python3 test1.py 
vim test1.py 
python3 test1.py 
vim test.py

dpkg --verison
dpkg --version
sudo apt install dpkg
cd Downloads/
ls
sudo dpkg -i ./code_1.95.3-1731513102_amd64.deb 
exit
sudo apt isntall dpkg
dpkg
sudo apt install dpkg-deb
sudo dpkg -i libgl1-mesa-glx_22.3.6-1+deb12u1_amd64.deb 
sudo apt install tftp
sudo apt update
sudo apt install tftp tftpd-hpa
sudo dpkg -i Packet_Tracer822_amd64_signed.deb 
sudo apt install -f
sudo dpkg -i Packet_Tracer822_amd64_signed.deb 
sudo apt install openssl
sudo apt install dconf
clear
sudo apt install putty
python3 --version
pip --version
sudo apt install python3-pip
sudo systemctl start ssh
sudo apt isntall sshd
sudo systemctl enable ssh
sudo systemctl enable sshd
sudo systemctl enable ssh.service
sudo systemctl status ssh
sudo apt install openssh-server
sudo systemctl enable ssh.service
sudo systemctl start ssh.service
ifconfig
sudo apt install net-tools
ifconfig
lsblk
sudo blkid /dev/sda
ls /mnt
mkdir /mnt/data
sudo mkdir /mnt/data
sudo mount /dev/sda2 /mnt/data
sudo mount /dev/sda4 /mnt/data
cd /media
ls
cd n48i1/
ls
tree ./
sudo apt install tree
sudo mount /dev/sda2 /mnt/data
lsblk 
sudo mount /dev/sdb2 /mnt/data
sudo fuser -m /dev/sda2
sudo fuser -m /dev/sdb2
sudo kill -9 4365
sudo mount /dev/sdb2 /mnt/data
cd /media
ls
exit
cd /media
ls
cd n48i1/
ls
lsblk
cd /media/n48i1/
ls
ls -a
sudo su
sudo mount -o ro /dev/sdc2 /mnt/data
sudo nano /etc/ssl/openssl.cnf 
sudo sysemctl daemon-reloa
sudo sysemctl daemon-reload
sudo systemctl daemon-reload
cd Documents/crypto/
ls
cd OpenSSL
ls
mkdir Lab2024-2
cd Lab2024-2
openssl genersa -h
openssl genrsa -h
openssl genrsa -out fichiercle
ls
cat fichiercle 
openssl genrsa -des3 -out rsa_key.priv 1024
ls
cat rsa_key.priv 
openssl rsa -in rsa_key.priv -pubout -out rsa_key.pub
ls
cat rsa_key.pub 
openssl rsa -in rsa_key.priv -check
ls
cat rsa_key.pub
echo "Free Palestine" > fichier_clair
cat fichier_clair 
openssl rsa -in rsa_key.priv -text 
openssl rsa -in rsa_key.priv -text  -noout
openssl rsa -in rsa_key.pub -text  -noout
openssl rsa -pubin -in rsa_key.pub -text -noout
ls
openssl rsautl -encrypt -inkey rsa_key.pub -pubin -in fichier_clair -out fichier_encrypt
openssl pkeyutl -encrypt -inkey rsa_key.pub -pubin -in fichier_clair -out fichier_encrypt
cat fichier_encrypt 
openssl pkeyutl -decrypt -inkey rsa_key.priv  -in fichier_encrypt -out fichier_decrypt
cat fichier_decrypt 
ls
cat rsa_key.pub
/bin/python3 /home/n48i1/Desktop/networking/test.py
python3 test.py 
sudo apt install gnome-shell-extensions gnome-tweaks chrome-gnome-shell
sudo apt install zsh
zsh
sudo apt purge zsh
sudo apt install fish
fish
clear
fish
python3 -m venv venv
sudo apt install python3.12-venv
sudo apt install python3-pip
python3 -m venv venv
source venv/bin/activate
pip install pandas 
pip install seaborn 
pip install scikit-learn
pip install matplotlib
pip install numpy
pip install streamlit
streamlit run pfe.py 
pip install --upgrade streamlit
streamlit run pfe.py 
streamlit run machinelearningVehicule.py 
sudo dpkg -i wps-office_11.1.0.11723.XA_amd64.deb 
fish
clear
ping 192.168.1.12
ifconfig
ping fe80::93cd:e64d:c76e:d95d
ping fe80::40eb:6ff:fe80:f16d
fish
clear
lsblk
sudo fdisk -l
fdisk -l
sudo fdisk -l
clear
lsblk -l
lsblk
tree /dev
lsblk
lsblk
sudo apt install vlm2
pvcreate
lsblk
sudo umount /dev/sda1
lsblk
sudo umount /dev/sda1
sudo fdisk /dev/sda1
man fdisk
man fdisk | less
sudo fdisk /dev/sda1
sudo fdisk -l /dev/sda
sudo umount /dev/sda
sudo fdisk -l /dev/sda
sudo fdisk /dev/sda1
sudo mount /dev/sda1
lsblk
sudo mount /dev/sda1
sudo su
exit
sudo su
exit
lsblk
clear
fish
clear
lsblk
sudo fdisk /dev/sda
sudo umount /dev/sdb
sudo umount /dev/sdb1
sudo umount /dev/sda
sudo fdisk /dev/sda
chmod +x ./VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle 
sudo ./VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle 
git clone https://github.com/akshatshah17/Network_Design_of_a_Company_in_Packet_Tracer.git
sudo apt install git
git clone https://github.com/akshatshah17/Network_Design_of_a_Company_in_Packet_Tracer.git
git clone https://github.com/chmuhammadasim/Computer-Networking-Project-Packet-Tracer.git
git clone https://github.com/Anas436/Campus-Network-System-Using-Cisco-Packet-Tracer.git
sudo fdisk -l
lsblk
fdisk -l
lblk
lsblk
sudo mkfs.fat -F 32 /dev/sda
lsblk
sudo umount /media/n48i1/UBUNTU\ 23_1 
sudo su
lsblk
sudo fdisk /dev/sda1
sudo fdisk /dev/sda
lsblk
sudo umount /media/n48i1/N48I1 
lsblk
sudo umount /media/n48i1/N48I1
sudo fdisk /dev/sda
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda1
sudo fdisk -l /dev/sda
sudo fdisk -l /dev/sda1
lsblk
sudo fdisk /dev/sda
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda1
sudo fdisk /dev/sda1p1
lsblk
sudo fdisk /dev/sda1
sudo partprobe /dev/sda1
lsblk
sudo partx -u /dev/sda1
lsblk
sudo fdisk -l /dev/sda1
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
sudo apt install lvm2
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
sudo fdisk -l /dev/sda1
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
lsblk
sudo fdisk -l /dev/sda
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo pvcreate /dev/sda1 /dev/sda2 /dev/sda5
sudo fdisk -l /dev/sda
sudo pvcreate /dev/sda2
sudo parted /dev/sda print
sudo fdisk /dev/sda
sudo fdisk -l /dev/sda
sudo vgcreate VG1 /dev/sda1 /dev/sd2 /dev/sda3
sudo vgcreate VG1 /dev/sda1 /dev/sda2 /dev/sda5
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda
lsblk
sudo parted /dev/sda print
sudo fdisk /dev/sda1
sudo fdisk /dev/sda
sudo pvcreate  /dev/sda1 /dev/sda2 /dev/sda5
sudo vgcreate  /dev/sda1 /dev/sda2 /dev/sda5
sudo vgcreate  /dev/sda1  /dev/sda5
sudo vgcreate VG1 /dev/sda1  /dev/sda5
sudo lvcreate -L 2G -n LV1 VG1
sudo lvcreate -L 1G -n LV2 VG1
sudo mkfs.ext4 /dev/VG1/LV1
sudo mkfs.btrfs /dev/VG1/LV2
btrfs
sudo apt install btrfs-progs
sudo mkfs.btrfs /dev/VG1/LV2
mkdir ~/doss1 ~/doss2
sudo mount /dev/VG1/LV1 ~/doss1
sudo nano /etc/fstab
sudo mount -a
sudo systemctl daemon-reload
sudo mount -a
sudo nano /etc/fstab
sudo mount -a
sudo systemctl daemon-reload
lsblk
df -h
sudo lvextend -L +1G /dev/VG1/LV1
sudo resize2fs /dev/VG1/LV1
sudo lvdisplay /dev/VG1/LV1
sudo umount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo mount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo umount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo mount /dev/VG1/LV2 /home/n48i1/doss2
sudo btrfs filesystem resize -512M /home/n48i1/doss2
sudo btrfs filesystem show /home/n48i1/doss2
sudo lvdisplay /dev/VG1/LV2
touch ~/doss1/file1 ~/doss1/file2
sudo touch ~/doss1/file1 ~/doss1/file2
sudo lvcreate -L 200M -s -n backup /dev/VG1/LV1
mkdir /home/n48i1/backup
sudo mount /dev/VG1/backup /home/n48i1/backup
ls /home/n48i1/backup
lsblk
python3
exit
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
pip3 venv my_env
python3 -m venv venv
source venv/bin/activate
pip install pandas numpy seaborn matplotlib
lsblk
nabil
sudo apt install nabil
clear
fgh
exit
brightnessctl set 50%
sudo apt install brightnessctl
sudo systemctl daemon-reload
brightnessctl set 50%
sudo brightnessctl set 50%
python
python3
exit
streamlit run main.py 
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
git init
git add .
git commit -m "first commit"
user.name
git user.name
git config --global user.name "N48I1-X"
git config --global user.email "nabil.elhilali.23@ump.ac.ma"
git remote add origin https://github.com/N48I1-X/DataDefender.git
git branch -M main
git push -u origin main
git push -u origin master
echo "# DataDefender" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/N48I1-X/DataDefender.git
git push -u origin main
git
git pull origin main
git pull origin main
git ls-remote origin
git ls-remote origin
git ls-remote origin
git pull origin main
ls
cat README.md 
git fetch origin
git checkout origin/main -- README.md
ls
cat README.md 
ls
tree
pwd
ls
cat /etc/fstab 
cat /etc/fstab 
free
zram
/etc/
cd /etc/
ls
cat sudoers
sudo cat sudeoers
sudo cat sudoers
lsblk
whatis mbr
whatis lvm
lsblk
lsblk
sudo mount /dev/sdd1 /mnt
sudo umount /mnt
sudo cp ./venv /media/n48i1/Twins
sudo cp venv /media/n48i1/Twins
sudo cp -r venv /media/n48i1/Twins
pip install scikit-learn
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
streamlit run main.py
sudo systemctl daemon-reload
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
steamlit run pfe.py 
streamlit run pfe.py 
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
python3 -m venv venv
source venv/bin/activate
pip3 install pycryptodome
cd blowfish/
python3 blowfish.py 
exit
echo "Bonjour IRSI, ceci est un message secret chiffré avec Salsa20 !" >
message.txt
echo "Bonjour IRSI, ceci est un message secret chiffré avec Salsa20 !" > message.txt
pip install pynacl
cd blowfish/
python3 salsa20_encryption.py 
pip install pycryptodome
cd Desktop/
cd ..
cd Documents/
ls
cd Projet\ Agile/
git clone https://github.com/s2n-cnit/108931-cyber-security-lab.git
git clone https://github.com/Mehedi-Hasan-Rabbi/Company-Business-System-Network-Design.git
sudo apt install git
git
/home/n48i1/Documents/crypto/venv/bin/python /home/n48i1/Documents/crypto/yield.py
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
ifconfig
docker --version
sudo apt install docker
sudo apt install docker.io
sudo docker pull kalilinux/kali-rolling
sudo docker run -it kalilinux/kali-rolling
ifconfig
ping 127.0.0.1
ping 127.17.0.2
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
bettercap
sudo apt install bettercap
sudo bettercap
clear
cd /home
ls -la
cd n48i1/
ls -la
cat .bash_history 

clear
where python
clear
pip install -r requirements.txt
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
docker compose up -d
clear
docker compose up -d
clear
clear
git clone https://github.com/big-data-europe/docker-hadoop.git
cd docker-
cd docker-hadoop
clear
ls
docker compose up -d
docker compose down 
docker compose up -d
docker compose down
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
clear
clear
cd ..
ls 
cd hadoop_test
clear
ls
docker compose up -d
clear
docker compose up -d
docker exec -it container1 bash
clear
ls
docker compose down 
clear
docker compose up -d
docker compose down 
clear
docker-compose up --build -d
docker exec -it container1 bash\

docker compose down 
clear
docker-compose up --build -d\

docker exec -it container1 bash\

docker exec -it container2 bash
docker compose down 
clear
docker-compose up --build -d
docker exec -it container2 bash
docker exec -it container1 bash
clear
docker-compose up --build -d
docker exec -it container2 ssh user@container1\

clear
docker compose down 
clear
docker-compose up --build -d
docker exec -it container2 ssh user@container1\

clear
cd ..
clear
ls
cd docker-hadoop
clear
ls 
docker compose up -d
clear
ls
docker compose down 
docker compose up -d
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up -d
docker compose down 
docker compose down 
docker compose up -d
docker compose down 
export HADOOP_VERSION=3.3.6
wget https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
ls
rm hadoop-3.3.6.tar.gz
ls
clear
clear
ls
docker ps
clear
docker exec -it datanode1
clear
docekr exec -it datanode1 bash
docker exec -it datanode1 bash
clear
docker exec -it datanode2 bash
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode1 bash
clear
docker exec -it datanode1 bash
clear
exit
clear
docker exec -it datanode1 bash
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
docker exec -it datanode1 bash
docker exec -it datanode2 bash
ls
cdlear
ls
clear
ls
clear
ls
docker build -t hadoop-cluster .
clear
docker build -t hadoop-cluster .
ls
clear
docker compose up -d
clear
docker compose down 
clear
docker compose up -d
clear
docker compose ps
docker-compose ps
clear
clear
clear
docker build -t hadoop-cluster .
docker compose down 
clear
docker compose up -d
docker compose ps
docker exec -it namenode bash
clear
docker compose down
clear
docker compose up -d
clear
docker compose ps
clear
docker exec -it namenode bash
clear
clear
docker exec -it namenode bash
clear
docker compose down 
clear
clear
clear
history
clear
docker build -t hadoop-cluster .
docker compose up -d
docker exec -it namenode bash
docker --version
clear
docker compose ps
clear
docker exec -it datanode1 bash
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
cler
clear
clear
ls
docker compose start 
clear
docker exec -it namenode bash
docker compose down 
clear
clear
clear
docker compose up -d
clear
docker exec -it namenode
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
clear
exit
clear
clear
ls
cd /
ls
clear
cd etc
ls
cat hosts
vim hosts
clear
sudo vim hosts
clear
docker exec -it datanode2 bash
clear
ping -c 3 192.168.0.130
clear
ssh oussama@192.168.0.130
clear
cd Do
cd Downloads
clear
ls
scp ./apache-hive-4.0.1-bin.tar.gz oussama@192.168.0.130:/home/oussama
clear
ls
clear
scp mysql-connector-j-9.1.0.tar.gz oussama@192.168.0.130:/home/oussama
clear
clear
ls
clear
ip a
ifconfig
hostname
sudo systemctl status ssh
clear
clear
ls
scp hive-site.xml oussama@192.168.0.130:/home/oussama
clear
sudo systemsetup -getremotelogin
hostname
vim to_ubuntu.txt
scp to_ubuntu.txt oussama@192.168.0.130:/home/oussama
vim to_ubuntu.txt
scp to_ubuntu.txt oussama@192.168.0.130:/home/oussama
cd Downloads
clear
ls
clear
scp apache-hive-3.1.3-bin.tar.gz oussama@192.168.0.130:/home/oussama
scp apache-hive-3.1.3-bin.tar.gz oussama@192.168.1.19:/home/oussama
ls
clear
vim to_ubuntu.txt
cd Downloads
clear
cat to_ubuntu.txt
cat to_ubuntu.txt
clear
scp to_ubuntu.txt oussama@192.168.1.19:/home/oussama
clear
ls ~/PycharmProjects/prices-predictor-system/data/archive.zip
docker build -t hadoop-cluster .
clear
ls
clear
docker compose up -d
clear
docker exec -it namenode bash
clear
docker compose down
clear
docker build -t hadoop-cluster .
clear
docker compose up -d
clear
clear
clear
clear
clear
clear
clear
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker compose stop
docker compose start
docker exec -it namenode bash
clear
docker compose stop
clear
clear
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
clear
clear
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
clear
ls
docker compose start
clear
docker exec -it namenode bash
clear
docker cp ./WordCount.jar namenode:/root/WordCount.jar
docker cp ./input.txt namenode:/root/input.txt
clear
docker exec -it namenode bash
clear
docker cp ./WordCount.jar namenode:/root/WordCount.jar
docker exec -it namenode bash
docker cp ./WordCount.jar namenode:/root/WordCount.jar
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker cp ./input.txt namenode:/root/input.txt
docker exec -it namenode bash
docker compose stop
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
zenml up
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
zenml up
pip install "zenml[server]==0.64.0"
zenml up
zenml stack describe
zenml integration install mlflow -y \

zenml integration install mlflow -y
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ifconfig
clear
hostname
sudo systemsetup -getremotelogin\

clear
ls
clear
ls
clear
ifconfig
ip a
clear
ip a
clear
ifconfig
clear
ls
clear
ping -c 3 192.168.1.19
clear
clear
clear
docker exec -it postgres-hive bash
clear
exit
docker exec -it namenode bash
clear
exit
docker exec -it namenode bash
clear
ls
clear
exit
docker exec -it namenode bash
exit
docker exec -it namenode bash
clear
exit
docker exec -it namenode bash
exit
clear
clear
clear
docker compose start
docker compose down 
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker compose up -d
docker exec -it postgres-hive bash
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up 
docker compose start
clear
ls
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up -d
clear
docker exec -it namenode bash
docker cp ./config/hive-site.xml namenode:/
docker exec -it namenode bash
clear
docker compose down
clear
clear
clear
clear
clear
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker exec -it namenode bash
clear
docker cp ./config/hive-site.xml namenode:/
docker exec -it namenode bash
clear
docker compose down 
clear
clear
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker exec -it namenode bash
clear
docker compose down 
clear
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker compose down
clear
docker compose up -d
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker cp config/mapred-site.xml namenode:/
docker exec -it namenode bash
clear
ping -c 3 192.168.0.143
cler
clear
clear
ls
clear
docker exec -it namenode bash
exit
docker exec -it hive-metastore mysql -u hive -p
exit
docker exec -it namenode bash
docker compose down
clear
docker build -t hadoop-cluster .
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker compose up -d
docker compose down
clear
docker compose up -d
docker exec -it hive-metastore bash
clear
docker exec -it hive-metastore bash
docker exec -it mysql-hive mysql -u root -p\

docker exec -it hive-metastore mysql -u root -p\

clear
docker compose stop
ifconfig
clear
docker compose start
docker exec -it namenode bash
docker compose down
clear
export HIVE_VERSION=3.1.3
docker run -d -p 10000:10000 -p 10002:10002 --env SERVICE_NAME=hiveserver2 --name hive4 apache/hive:${HIVE_VERSION}
docker exec -it hive4 bash
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
hostname
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker exec -it mysql-hive mysql -u root -p
docker exec -it hive-metastore mysql -u root -p
clear
docker exec -it namenode bash
clear
docker compose down;
clear
clear
clear
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ping -c 3 192.168.1.115
clear
ls
clear
cd Downloads
clear
ls
clear
scp -r hadoop root@192.168.1.115:/
clear
scp -r hadoop root@192.168.1.115:/
scp -r hadoop oussama@192.168.1.115:/home/oussama
clear
tar -cvf hadoop.tar ./hadoop
clear
scp hadoop.tar oussama@192.168.1.115:/home/oussama/hadoop.tar
tar -cvf hive.tar ./hive
clear
clear
scp /Users/alaoui/Projects/docker/Hadoop/hadoop.env oussama@192.168.1.115:/home/oussama/hadoop.env
clear
cd Downloads
scp hive.tar oussama@192.168.1.115:/home/oussama
cd mysql-connector-j-9.1.0
ls
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.115:/home/oussama
clear
docker exec -it namenode bash
clera
clear
docker exec -it namenode bash
clear
exit
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
cd Downloads
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
cd mysql-connector-j-9.1.0
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
clear
cd ../..
clear
cd Downloads
scp hive.tar oussama@192.168.1.141:/home/oussama
scp /Users/alaoui/Projects/docker/Hadoop/hadoop.env oussama@192.168.1.141:/home/oussama/hadoop.env
scp hadoop.tar oussama@192.168.1.141:/home/oussama/hadoop.tar
ssh root@localhost -p 23
clear
ssh oussama@localhost -p 23
clear
clear
exit
clear
clear
docker compose up -d
docker exec -it hive-metastore bash
clear
ls
clear
docker exec -it namenode bash
clear
clear
docker compose up -d
docker compose down 
clear
docker compose down 
clear
docker compose up -d
docker exec -it postgres /bin/bash
docker restart postgres\

clear
docker restart metastore-standalone
clear
docker run -d -p 9083:9083 --env SERVICE_NAME=metastore --name metastore-standalone apache/hive:3.1.3
clear
docker compose down 
clear
docker run -d -p 9083:9083 --env SERVICE_NAME=metastore --name metastore-standalone apache/hive:3.1.3
docker exec -it  metastore-standalone bash
docker compose up -d
docker compose down
clear
clear
docker compose up -d
clear
clear
clear
clear
clear
docker exec -it namenode bash
clear
docker compose down
clear
docker compose up -d
docker exec -it namenode bash
clear
clear
docker compose down 
docker compose up -d
clear
ls
clear
docker compose ps
docker exec -it hive-metastore mysql -u root -p
docker exec -it hive-metastore mysql -u hive -p
clear
docker exec -it namenode bash
exit
docker compose down ;
clear
clear
clear
clear
docker run -d ubuntu:22.04
clear
docker run -d ubuntu sleep infinity
clear
clear
docker stop c9385ef3b417b3deff88a3fe18b08bcd38424832bcbbcbd92f7639cbf9699c11
clear
docker rm c9385ef3b417b3deff88a3fe18b08bcd38424832bcbbcbd92f7639cbf9699c11
clear
docker run -d -p 23:22 ubuntu sleep infinity
docker exec -it e8ba6afa2c08b9b29d94bd1e72e02b60d899995e742e8694fae1954e34e9108c bash
clear
docker rm -f e8ba6afa2c08b9b29d94bd1e72e02b60d899995e742e8694fae1954e34e9108c
clear
docker run -d -p 23:22 ubuntu sleep infinity
docker exec -it lucid_canon bash
docker exec -it lucid_cannon bash
clear
clear
docker rm -f lucid_cannon
clear
clear
docker run -d -p 23:22 --name test_hadoop ubuntu sleep infinity
clear
docker exec -it test_hadoop bash
clear
cd /Users/alaoui/Downloads
clear
cd /Users/alaoui/from_vm_to_container
clear
ls
tar -cvf hadoop-3.3.6
tar -cvf hadoop-3.3.6.tar hadoop-3.3.6
clear
ls
docker cp hadoop-3.3.6.tar test_hadoop:/
clear
clear
ls
docker cp bashrc test_hadoop:/
clear
docker exec -it test_hadoop bash
clear
docker stop test_hadoop 
clear
docker exec -it test_hadoop bash
clear
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker exec -it test_hadoop bash
clear
docker rm -r test_hadoop
docker rm -f test_hadoop
clear
docker run -d --name test_hadoop ubuntu sleep infinity
docker exec -it test_hadoop bash
clear
cd /Users/alaoui/from_vm_to_container
ls
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker cp hadoop-3.3.6.tar test_hadoop:/
clear
ls
tar -cvf hive.tar hive
ls
clear
ls
docker cp hive.tar test_hadoop:/
docker exec -it test_ubuntu bash
docker exec -it test_hadoop bash
docker exec -it test_ubuntu bash
docker exec -it test_hadoop bash
docker compose up -d
clear
docker exec -it hive-metastore mysql -u root -p
clear
exit
clear
docker network create my_network
docker network ps
clear
docker run -d \\
  --name mysql-container \\
  --network my_network \\
  -e MYSQL_ROOT_PASSWORD=root \\
  -e MYSQL_DATABASE=metastore \\
  -e MYSQL_USER=hive \\
  -e MYSQL_PASSWORD=password \\
  mysql:latest
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
clear
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
clear
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
docker run -d \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
docker run -d \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
docker run -dit \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest\

docker rm -f ubuntu-container
docker run -dit \\
  --name test_hadoop \\
  --network my_network \\
  ubuntu:latest\

clear
clear
cd /Users/alaoui/from_vm_to_container 
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker cp hadoop-3.3.6.tar test_hadoop:/
docker cp hive.tar test_hadoop:/
docker exec -it test_hadoop bash
clear
docker exec -it mysql-container mysql -u hive -p
docker exec -it mysql-container mysql -u root -p
clear
docker exec -it test_hadoop bash
clear
docker exec -it mysql-container mysql -u root -p
docker exec -it test_hadoop bash
docker rm -f test_hadoop
docker rm -f mysql-container
docker network ls
docker network inspect none
docker network inspect hadoop_hadoop-hive-network
docker network inspect my_network
l 
ls
ls
clear
clear
cd Projects/Python/SciDataViz
clear
ls
git status
l
echo hello, world
clear
ls -1
ls -1
ls --color=auto\

export LS_COLORS="di=0;34:fi=0;32"
ls
ls --color=auto
ls --color=auto
export LS_COLORS="di=0;34:fi=0;32"
ls
clear
ls -G
export LSCOLORS=ExFxBxDxCxegedabagacad
ls
ls -G
clear
export CLICOLOR=1\
export LSCOLORS=GxFxCxDxBxegedabagaced\
alias ls='ls -G'
ls
clear
ls
clear
ls
cd PycharmProjects
ls
cd chess_game_with_python
ls
clear
ls -l
ls
clear
ls -a /
sudo find / -type f -name "*.py" 2>/dev/null
ls
tmux
clear
ls
clear
clear
ls
clear
cd /Users/alaoui/Projects/Python/SciDataViz
clear
ls
ls -G
l
l -G
sudo visudo
clear
clear
docker compose ps
clear
docker p
docker compose ps
docker ps
hostname
exit
brew tap mongodb/brew
docker compose up -d
docker exec -it namenode bash
docker compose down 
docker compose up -d
docker exec -it namenode bash
docker compose down 
docker build -f Dockerfile -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
clear
ls
touch test
mv -v test test1
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker compose stop 
cler
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile_v2 -t hadoop-node .
clear
clear
clear
clear
clear
clear
clear
clear
clear
clear
clear
cler
clear
clear
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker build -f Dockerfile_v2 -t hadoop-node .
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker compose down
docker compose up -d
docker compose down
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose up -d
clear
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker compose down
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose up -d
docker compose down 
docker compose up -d
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose down
docker compose up -d
docker exec -it namenode bash
docker exec -it metastore_db mysql -u root -p
docker exec -it hive- metastore mysql -u root -p
clear
docker exec -it hive-metastore mysql -u root -p
docker exec -it hive-metastore mysql -u root -p
clear
docker exec -it hive-metastore mysql -u root -p
clear
clear
docker exec -it namenode bash
docker compose stop
docker compose start
clear
docker compose stop
docker compose start
docker inspect namenode
clear
ping -c 3 172.24.0.3
clear
hostname
clear
ping -c 3 172.24.0.3
clear
docker inspect namenode
clear
docker compose stop
docker pull mongo
brew tap mongodb/brew
docker compose up -d
clear
docker compose up -d
docker compose start
docker exec -it mongodb bash
clear
docker exec -it mongodb bash
docker cp films.json mongodb:/
docker exec -it mongodb bash
clear
docker cp artistes_mongo.json mongodb:/
docker exec -it mongodb bash
brew update
brew install mongodb-community@8.0
netstat -anlp | grep 27017
netstat  | grep 27017
netstat
brew services restart mongodb/brew/mongodb-community
/bin/python3 "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/tempCodeRunnerFile.py"
clear
clearpython -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/tempCodeRunnerFile.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clearpython -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
python -u "/Users/alaoui/Projects/Python/tests/test.py"
clear
pi 
pip install graphviz
python -u "/Users/alaoui/Projects/Python/tests/test.py"
clear
python -u "/Users/alaoui/Projects/Python/tests/test.py"
python -u "/Users/alaoui/Projects/Python/tests/tempCodeRunnerFile.py"
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
pip install manim
pip install manim
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ps | grep mongo
brew services list
mongosh
clear
mongosh
clear
mongosh
clear
mongosh
exit

sudo apt update && sudo apt upgrade  
sudo apt install python3-pip -y  
pip3 install flask  
mkdir ~/flask_app && cd ~/flask_app  
touch app.py  
echo "print('Hello, Flask!')" > app.py  
python3 app.py  
sudo apt-get remove python3-minimal  
sudo dpkg --configure -a  
sudo apt install git-all  
git config --global user.name "example_user"  
git config --global user.email "example_user@example.com"  
git log --oneline  
sudo apt install curl -y  
curl -O https://example.com/sample.txt  
cat sample.txt  
rm sample.txt  
wget https://example.com/file.zip  
unzip file.zip -d ~/downloads/  
sudo mv ~/downloads/file /usr/local/bin/  
chmod 755 /usr/local/bin/file  
ls -lh /usr/local/bin/  
sudo apt install htop -y  
htop  
sudo systemctl restart ssh  
sudo systemctl status apache2  
sudo apt install apache2 php libapache2-mod-php -y  
sudo systemctl enable apache2  
php -v  
nano /var/www/html/index.php  
sudo chmod 755 /var/www/html/index.php  
sudo apt install composer  
composer create-project laravel/laravel myapp  
cd myapp && php artisan serve  
sudo apt install mariadb-server  
sudo mysql -u root -p  
CREATE USER 'new_user'@'localhost' IDENTIFIED BY 'password';  
GRANT ALL PRIVILEGES ON *.* TO 'new_user'@'localhost';  
FLUSH PRIVILEGES;  
sudo apt install ruby ruby-dev  
gem install jekyll bundler  
jekyll new blog  
cd blog && bundle exec jekyll serve  
sudo apt install openvpn  
sudo openvpn --config client.ovpn  
sudo apt install tmux  
tmux new -s mysession  
tmux ls  
tmux attach -t mysession  
tmux kill-session -t mysession  
cd ~/projects/  
mkdir new_project && cd new_project  
touch README.md  
echo "# New Project" > README.md  
sudo apt install tree -y  
tree ~/projects  
sudo apt install docker-compose  
docker-compose up -d  
docker-compose down  
docker volume ls  
docker network ls  
docker exec -it my_container bash  
sudo apt-get install clang -y  
clang++ -o app app.cpp  
./app  
gdb app  
break main  
run  
print var1  
quit  
sudo apt-get install cmake -y  
cmake .. && make  
sudo make install  
sudo apt install kubectl  
kubectl get pods  
kubectl create deployment nginx --image=nginx  
kubectl expose deployment nginx --type=LoadBalancer --port=80  
kubectl delete service nginx  
sudo apt install snapd  
sudo snap install spotify  
snap list  
sudo snap refresh  
snap remove spotify  
cd /etc/systemd/  
ls  
sudo nano system.conf  
sudo systemctl daemon-reload  
sudo apt install samba  
sudo nano /etc/samba/smb.conf  
sudo smbpasswd -a user  
sudo systemctl restart smbd  
sudo apt install vim  
vim /home/user/.vimrc  
echo 'syntax on' >> ~/.vimrc  
sudo apt install screenfetch  
screenfetch  
sudo apt install cowsay  
cowsay "Hello World!"  
sudo apt install fortune  
fortune | cowsay  
sudo apt-get install figlet  
figlet "Hello, World!"  

sudo apt update  
sudo apt upgrade -y  
apt-cache policy git  
sudo apt install build-essential  
apt-get remove docker.io  
sudo apt autoremove -y  
ls -l /usr/local/bin  
sudo cp ~/Downloads/software.tar.gz /opt/tools/  
tar -xzvf /opt/tools/software.tar.gz  
cd /opt/tools/software  
./install.sh  
sudo ln -s /usr/local/bin/mytool /usr/bin/mytool  
sudo systemctl restart apache2  
sudo apt install apache2-utils  
sudo apt install snapd  
snap install code --classic  
sudo snap refresh  
sudo add-apt-repository ppa:deadsnakes/ppa  
sudo apt install python3.10  
python3.10 --version  
pip3 install --upgrade pip  
pip3 install virtualenv  
virtualenv myenv  
source myenv/bin/activate  
deactivate  
sudo apt install nodejs npm  
node -v  
npm install -g yarn  
sudo yarn add react  
mkdir my_project && cd my_project  
git init  
git clone https://github.com/example/example-repo.git  
git checkout -b feature-branch  
git merge main  
git pull  
git push origin feature-branch  
rm -rf old_project/  
cp -r new_project/ /home/user/projects/  
sudo chown -R user:group /home/user/projects/  
chmod +x /home/user/projects/run.sh  
./run.sh  
df -h  
du -sh /home/user/projects/  
sudo apt install gnome-tweak-tool  
sudo apt remove --purge libreoffice*  
sudo apt-get clean  
sudo find / -type f -name "*.log"  
sudo rm /var/log/apache2/error.log  
sudo apt install g++  
g++ -o my_program main.cpp  
./my_program  
sudo apt-get install cmake  
cmake .  
make && sudo make install  
sudo apt install mysql-server  
sudo systemctl start mysql  
sudo mysql_secure_installation  
mysql -u root -p  
CREATE DATABASE mydb;  
USE mydb;  
SHOW TABLES;  
sudo apt install redis-server  
sudo systemctl enable redis  
redis-cli ping  
docker ps -a  
docker start my_container  
docker stop my_container  
docker rm my_container  
docker images  
docker pull ubuntu:latest  
docker run -it ubuntu bash  
vim ~/.bashrc  
source ~/.bashrc  
alias ll='ls -la'  
unalias ll  
history  
clear  
sudo apt install zsh  
chsh -s /bin/zsh  
zsh --version  
echo $SHELL  
grep 'error' /var/log/syslog  
awk '{print $1, $2}' /var/log/syslog  
cut -d':' -f2 /etc/passwd  
sort /etc/passwd | uniq  
find /home/user/ -type f -size +10M  

sudo apt update
sudo apt upgrade
apt list --upgradable
sudo apt install --upgrade python3
sudo apt install libssl-dev
sudo apt install git curl
sudo apt install nginx -y
apt-cache search openjdk
sudo apt install openjdk-11-jdk
sudo systemctl restart nginx
sudo apt remove python2
sudo apt autoremove
sudo apt install htop
clear
sudo systemctl status nginx
sudo apt install tree
sudo mkdir /opt/software
sudo cp ~/downloads/myapp.tar.gz /opt/software/
tar -xzvf /opt/software/myapp.tar.gz
cd /opt/software/myapp
./configure
make
sudo make install
java -version
python3 --version
git clone https://github.com/example/repo.git
cd repo
git pull origin main
sudo apt install docker.io
sudo docker run -it ubuntu bash
apt search postgresql
sudo apt install postgresql postgresql-contrib
sudo systemctl enable postgresql
sudo systemctl start postgresql
sudo apt-get install curl -y
pip3 install requests
pip3 install pandas
pip3 install matplotlib
ls -la
cd /etc
nano sources.list
sudo apt update && sudo apt upgrade -y
sudo apt install net-tools
ifconfig
sudo apt install vim
sudo vim /etc/fstab
sudo apt install neofetch
neofetch

sudo apt update  
sudo apt upgrade  
apt list --upgradable  
sudo apt upgrade python3 -y  
python --version  
python3 --version  
oops, wrong command  
python --version  # Checking again just in case  
sudo apt install vim  
vim test_file.txt  
:wq  # Didn't save properly last time  
cat test_file.txt  
sudo apt install git  
git init  
git config --global user.name "example_user"  
git config --global user.email "example@example.com"  
git remote add origin https://github.com/example/repo.git  
git status  
git add .  
git commit -m "Initial commit"  
git push origin main  
oops! forgot credentials  
git push origin main  
sudo apt install curl -y  
curl -O https://example.com/sample.txt  
ls  
cat sample.txt  
rm sample.txt  
wget https://example.com/archive.zip  
unzip archive.zip  
sudo mv archive /usr/local/bin/  
chmod +x /usr/local/bin/archive  
ls -lh /usr/local/bin/  
python3 script.py  
sudo apt install python3-pip  
pip install flask  
pip install requests  
python3 flask_app.py  
Ctrl+C  # Killed it, will rerun after changes  
vim flask_app.py  
python3 flask_app.py  
sudo apt install docker.io  
docker pull ubuntu:latest  
docker run -it ubuntu bash  
exit  
docker ps -a  
docker rm $(docker ps -aq)  
docker images  
sudo apt install tree  
tree ~/projects  
sudo apt install htop  
htop  
sudo systemctl restart apache2  
systemctl status apache2  # Missed sudo!  
sudo systemctl status apache2  
sudo apt install mysql-server  
sudo mysql_secure_installation  
mysql -u root -p  
CREATE DATABASE mydb;  
USE mydb;  
SHOW TABLES;  
sudo apt install nodejs npm  
node -v  
npm install -g create-react-app  
create-react-app my-react-app  
cd my-react-app  
npm start   
vim App.js  
npm start  
sudo apt install tmux  
tmux new -s work  
tmux ls  
tmux attach -t work  
tmux kill-session -t work  
sudo apt install neofetch  
neofetch  
sudo apt install cowsay  
cowsay "I love Linux!"  
sudo apt install fortune  
fortune | cowsay  
sudo apt install snapd  
sudo snap install code --classic  
code .  # Launching VS Code  
Ctrl+Shift+P  # Found a feature in VS Code  
sudo apt install ruby  
gem install jekyll bundler  
jekyll new blog  
cd blog  
bundle exec jekyll serve   
vim _config.yml  
bundle exec jekyll serve  
sudo apt-get remove unused-software  
sudo apt autoremove  
history | grep "apt"  # Looking for recent package installs  
sudo apt upgrade --dry-run  







sudo apt update
sudo apt upgrade
sudo apt update
apt list --upgradable
sudo apt upgrade --upgradable
sudo apt update --upgradable
sudo apt install --upgradable
sudo apt install $(apt list --upgradable)
apt list --upgradable
sudo apt upgrade sudo apt install flatpak
sudo apt upgrade gnome-text-editor
apt list --upgradable
sudo apt upgrade language-pack-en-base language-pack-en libp11-kit0 libpython3-stdlib p11-kit-modules p11-kit python-apt-common python3-apt python3-minimal python3 zlib1g
clear
sudo apt install flatpack
sudo apt install flatpak
python3 --version
clear
sudo apt install gbitorrent
sudo apt install qbitorrent
sudo apt install qBitorrent
sudo apt install qbittorrent
sudo apt install gnome-software-plugin-flatpak
flatpak remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
sudo apt upgrade
sudo apt update
systemctl restart now
systemctl reboot now
systemctl reboot 
cd OpenJDK21U-jdk_x64_linux_hotspot_21.0.4_7/
ls
cd jdk-21.0.4+7/
ls
cd bin
ls
cd ..
ls
cd .. 
ls
cp jdk-21.0.4+7/ /usr/lib/jvm/
cp -r jdk-21.0.4+7/ /usr/lib/jvm/
sudo cp -r jdk-21.0.4+7/ /usr/lib/jvm/
java --version
java
gcc
gcc --version
cd ~
ls
cd /usr/lib
ls
cd jvm
mkdir jvm
sudo mkdir jvm
cd jvm
ls
cd jdk-21.0.4+7/
ls
cd lib
ls
cd ..
ls
cd include
ls
cd ..
echo $PATH
PATH=$PATH:/usr/lib/jvm/jdk-21.0.4+7
echo $PATH
JAVA_HOME="/usr/lib/jvm/jdk-21.0.4+7"
echo JAVA_HOME
echo $JAVA_HOME
apt search jdk
sudo apt install jdk
sudo apt install default-
sudo apt install default-jdk
ls
cd ..
ls
sudo rm .r jdk-21.0.4+7/
sudo rm -r jdk-21.0.4+7/
ls
java --version
java -version
echo $PATH
ls
echo $PATH
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
echo $PATH
clear
rm -r $(ls)
ls
sudo rm -r $(ls)
pip3 install poetry
sudo apt install python3-pip
pip3 install poetry
sudo pip3 install poetry
pipx install poetry
sudo apt install pipx
pipx install poetry
sudo apt search docker
sudo apt install docker.io
sudo apt install vlc
git
wget
cd Desktop
ls
clear
git
clear
git config --global user.name "hamza-rx12"
git config --global user.email "alaoui.hamza2002@gmail.com"
git config --list
mkdir github-repos
cd github-repos/
ls
git clone https://github.com/hamza-rx12/pypro.git
git remote set-url origin https://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@github.com/hamza-rx12/pypro
git remote set-url origin https://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@github.com/hamza-rx12/pypro.git
git remote set-url origin https://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@github.com/hamza-rx12/pypro
git status
cd pypro/
git remote set-url origin https://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@github.com/hamza-rx12/pypro
clear
git status
clear
cave
curl -fsSL https://rpm.nodesource.com/setup_current.x -o nodesource_setup.sh
sudo apt install curl
curl -fsSL https://rpm.nodesource.com/setup_current.x -o nodesource_setup.sh
bash nodesource_setup.sh
ls
rm nodesource_setup.sh 
curl -fsSL https://deb.nodesource.com/setup_current.x -o nodesource_setup.sh
bash nodesource_setup.sh
sudo apt upgrade
sudo bash nodesource_setup.sh
apt-get install -y nodejs
sudo apt-get install -y nodejs
node -v
node
sudo find / *.nmconnection
sudo find / COFFE%20CUPS_5G
sudo find / *COFFE%20CUPS_5G*
sudo find / -name "*COFFE%20CUPS_5G*"
cp
cp --help
clear
ls
sudo cp netplan-NM-2b003bd1-14f2-44e9-9bc5-129320398b9c-motorola%20edge%2040_7929.nmconnection /run/NetworkManager/system-connections/
cd
ls
rm nodesource_setup.sh 
ls
cd ..
ls
cd linuxbrew/
ls
ls -la
cd .linuxbrew/
ls
cd bin
brew
sudo apt install homebrew
sudo apt install brew
ls
ls -l
echo $PATH
PATH=$PATH:/home/linuxbrew/.linuxbrew/bin/brew
brew
echo $PATH
brew
PATH=/home/natsu/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin
echo $PATH
(echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/natsu/.bashrc
brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
brew
echo $PATH
brew install pyenv
pyenv
pyenv versions
pyenv version
pyenv global 3.12.3
sudo apt install python-is-python3
pyenv version
sudo apt search discord
ls
poetry build
ls
ls -ka
ls -la
source .venv/bin/activate
poetry build
poetry build .
poetry 
ls
cat pyproject.toml 
python3 -version
python3 --version
poetry --version
{s
ls
cat pyproject.toml 
poetry install
ls
main.py
python3 main.py
deacrivate
deactivate
pip3 install pyenv
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
sudo apt-get install build-essential
brew install pyenv
python --version
python3 --version
clear
source .venv/bin/activate
poetry install 
ls 
cat pyproject.toml 
python3 main.py
poetry install --no-root
python3 main.py
cat main.py
uvicorn main:app
ls -la
deactivate
uvicorn main:app
source .venv/bin/activate
uvicorn main:app
python
node
npm
sudo apt install wifite
sudo apt install wifite
cd Desktop
ls
cd github-repos/
ls
git clone
git clone https://github.com/derv82/wifite.git
git clone https://github.com/SilentGhostX/HT-WPS-Breaker.git
git clone https://github.com/FluxionNetwork/fluxion.git
ls -l
git clone https://github.com/FluxionNetwork/fluxion.git
ls -l
git clone https://github.com/FluxionNetwork/fluxion.git
ls
cd wifite
ls
python3 wifite.py 
cat readme.md 
ls -l
./wifite.py
sudo ./wifite.py
sudo apt install wifite
brew
brew install wifite
cd ..
ls
cd HT-WPS-Breaker/
ls
ls-l
ls -l
./HT-WB.sh 
sudo ./HT-WB.sh 
git clone https://github.com/FluxionNetwork/fluxion.git
ifconfig
sudo apt install net-tools
apt --fix-broken install
sudo apt --fix-broken install
sudo apt install net-tools
ifconfig
sudo apt install wifite
sudo apt install fluxion
sudo apt install linset
cd ..
git clone https://github.com/FluxionNetwork/fluxion.git
cd Desktop/github-repos/
ls
git clone https://github.com/FluxionNetwork/fluxion.git
git clone git@github.com:FluxionNetwork/fluxion.git
git clone https://www.github.com/FluxionNetwork/fluxion.git
ls
make install
make 
ls
cd ..
ls
rm -r hashcat-6.2.6
sudo rm -r hashcat-6.2.6
ls
$ git clone https://github.com/hashcat/hashcat.git
git clone https://github.com/hashcat/hashcat.git
ls
ls -l
cd Desktop/github-repos/
git clone https://www.github.com/FluxionNetwork/fluxion.git
cd fluxion
ls
./fluxion.sh
sudo ./fluxion.sh
sudo ./fluxion.sh -i
ls
wifite
sudo wifite
airmon-ng stop wlo1mon
cd ..
ls
sudo wifite
sudo apt install bully
airmon-ng stop wlo1mon
sudo airmon-ng stop wlo1mon
sudo apt install bully
git clone  https://github.com/kimocoder/bully
brew install bully
sudo wifite
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
ls
make install
hashcat
sudo make install
hashcat
sudo wifite
cd ..
git clone https://github.com/kimocoder/bully.git
ls
cd bully
ls
cd src
ls
make
make install
sudo make install
ls
cd ..
ls
make
make install
cat README.md 
sudo apt install bully
sudo wifite
cd Downloads
git clone https://github.com/ZerBea/hcxtools.git
cd hcxtools
ls
sudo make install
make -j $(nproc)
sudo make -j $(nproc)
sudo apt install hcxpcapngtool
pip3 install hcxpcapngtool
sudo wifite
git clone https://github.com/ZerBea/hcxdumptool.git
cd hcxdumptool
make 
make -j $(nproc)
make 
make install
sudo make install
sudo wifite
airmon-ng stop wlx984827e0c363
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlo1mon
sudo wifite
sudo apt install bully 
sudo apt install hcxdumptool
sudo apt install hcxtools
sudo airmon-ng stop wlo1mon
ls
cd Desktop/
ls
cd github-repos/
ls
rm -r wifite
ls
sudo rm -r wifite
ls
la pypro
cd pypro/
ls
python Image_Master.py 
python3 Image_Master.py 
ls
clear
ls
poetry init
ls
python3 -m venv .venv
source .venv/bin/activate
poetry add customtkinter
python3 Image_Master.py 
poetry add opencv
poetry add cv2
poetry add openCv
poetry add openCV
poetry add opencv-python
poetry add pillow
poetry add tkinter
poetry add tk
python3 Image_Master.py 
clear
ls
npx
ls
sudo wifite
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlx984827e0c363
sudo wifite
sudo airmon-ng stop wlx984827e0c363
cd ..
ls
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
cd Desktop/github-repos/
cd HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
cd ..
cd fluxion/
ls
./fluxion.sh 
sudo ./fluxion.sh 
cd Desktop/github-repos/HT-WPS-Breaker/
ls
sudo ./HT-WB.sh 
sudo wifite
sudo ./HT-WB.sh 
/bin/python3 /home/natsu/test_python.py
ls
python
clear
ls
python test_python.py 
ls 
cd Desktop
ls
cd ..
ls
docker
docker pull athithya01/valorant
sudo docker pull athithya01/valorant
docker
docker -a
docker ps -a
sudo docker ps -a
sudo docker images
sudo docker rm athithya01/valorant 
sudo docker rmi athithya01/valorant 
sudo docker images
clear
wine
sudo apt install wine
sudo groupadd docker
sudo usermod -aG docker $USER
docker run hello-world
newgrp docker
docker 
docker run hello-world
ls
touch test.py
vim test.py
sudo apt install vim
vim test.py
python3 test.py
code test.py
xinput list
sudo apt update && sudo apt upgrade
/bin/python3 /home/natsu/test.py
chsh -s /bin/sh
echo $SHELL
chsh -s /bin/zsh
chsh -s /bin/sh
echo $SHEL
echo $SHELl
echo $SHELL
sudo systemctl start gdm
sudo systemctl start gdm3
mlightdm
python3
alsamixer
python3
/bin/python3 /home/natsu/testt.py
print(len(""))
python3 print(len(""))
python3 
/bin/python3 /home/natsu/prob6.py
python3
/bin/python3 /home/natsu/prob5.py
/bin/python3 /home/natsu/prob6.py
/bin/python3 /home/natsu/prob7.py
/bin/python3 /home/natsu/prob8.py
sudo apt install imwheel
bash <(curl -s http://www.nicknorton.net/mousewheel.sh)
bash <(curl -s https://gist.githubusercontent.com/AshishKapoor/6f054e43578659b4525c47bf279099ba/raw/0b2ad8b67f02ebb01d99294b0ecb6feacc078f67/mousewheel.sh)
wget https://gist.githubusercontent.com/AshishKapoor/6f054e43578659b4525c47bf279099ba/raw/0b2ad8b67f02ebb01d99294b0ecb6feacc078f67/mousewheel.sh
ls
zenity
zenity --scale
sudo add-apt-repository multiverse
sudo apt update && sudo apt install ttf-mscorefonts-installer
ls
wine
wine AbzuGame.exe
wine UplayLaunch.exe 
dpkg --add-architecture i386 && apt-get update && apt-get install wine32:i386
sudo dpkg --add-architecture i386 && apt-get update && apt-get install wine32:i386
sudo su
wine UplayLaunch.exe 
sudo wine UplayLaunch.exe 
wine UplayLaunch.exe 
su
sudo su
whereis wine
sudo apt-get install wine1.5
export WINEARCH=win32
export WINEPREFIX=~/.wine/win32
winecfg
winetricks
sudo apt install winetricks
winetricks
wine Dauntless.exe 
sudo wine Dauntless.exe 
ls
cd ..
ls
cd ABZU/
ls
wine AbzuGame.exe
wine AbzuGame.exe 
sudo wine AbzuGame.exe
wine AbzuGame.exe 
wine32 AbzuGame.exe 
sudo apt install wine32
wine32 AbzuGame.exe 
cd Desktop
ls
cd github-repos/
ls
code .
pipx
poetry
poetry list
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
docker ps -a
docker exec -it 091e7cbebf24 /bin/bash
cat /etc/group
sudo usermod -aG docker $USER
docker 
docker ps -a
clear
docker pull container-registry.oracle.com/database/free:latest
docker
docker images
docker pull container-registry.oracle.com/database/free:latest
docker images
docker run e1ff84cf03ed
docker run -d -p 1521:1521 -p 5500:5500 --name oracle-db container-registry.oracle.com/database/free
docker exec oracle-db ./setPassword.sh oracle
docker exec -it oracle-db /bin/bash
docker ps -a
docker rm 091e7cbebf24
docker ps -a
docker pull
container-registry.oracle.com/database/enterprise:latest
docker pull container-registry.oracle.com/database/enterprise:latest
docker login container-registry.oracle.com
docker pull container-registry.oracle.com/database/enterprise:latest
docker images
docker run -d -p 1521:1521 -p 5500:5500 --name oracle container-registry.oracle.com/database/enterprise
docker run -d -p 1521:1521  --name oracle container-registry.oracle.com/database/enterprise
docker run -d -p 1521:1521 -p 5500:5500 --name oracle container-registry.oracle.com/database/enterprise
docker exec oracle ./setPassword.sh oracle
docker run -it oracle /bin/bash
docker exec -it oracle /bin/bash
docker images
docker ps -a
docker rm oracle
docker ps -a
docker rm oracle
docker ps 
docker stop oracle-db
docker ps 
docker ps -a
docker rm oracle
docker ps 
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
jupyter notebook
sudo apt search jupyter-core
sudo apt search jupyter
sudo apt search jupyter-core
sudo apt install jupyter-core
jupyter notebook
jupyter-notebook
jupyter
jupyter notebook
sudo apt purge jupyter-core
pip3 install notebook
pipx install notebook
jupyter notebook
jupyter-notebook
pipx
pipx uninstall notebook
sudo pip3 install --upgrade pip
pip3 install jupyter
pipx install jupyter
jupyter
jupyter notebook
jupyter 
jupyter-notebook
pipx install jupyter
jupyter-notebook
pipx uninstall jupyter
pipx 
pipx uninstall jupyter-note
pipx install jupyter
pipx uninstall jupyter
pip3
pip3 install notebook
sudo apt install python3-pip
sudo apt autoremove
sudo apt install python3-pip
pip install notebook
sudo pip install notebook
sudo apt install python3-notebook
sudo apt install python3-jupyter-notebook
pipx install notebook
jupyter-notebook
python3 -m pip install notebook
sudo python3 -m pip install notebook
sudo apt update
sudo apt upgrade
sudo apt remove python3-pip
sudo apt update
sudo apt install python3-pip
python3-pip
sudo apt install python3-pip
pip install notebook
python3 -m pip install notebook
pipx install notebook
/bin/python3 /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
pip freez
pip freese
pip frese
pip freaze
pip freeze
jupyter-notebook
pip install numpy
pip install pandas
"/media/natsu/d8ba997f-f460-4db2-9796-095bdb42ecd1/my projects/my_fastApi/.venv/bin/python" /home/natsu/testtt.py
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/deactivate/bash/envVars.txt
"/media/natsu/d8ba997f-f460-4db2-9796-095bdb42ecd1/my projects/my_fastApi/.venv/bin/python" /home/natsu/testtt.py
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.14.1-linux-x64/python_files/deactivate/bash/envVars.txt
ls
exit
/bin/python /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/printEnvVariablesToFile.py /home/natsu/.vscode/extensions/ms-python.python-2024.16.0-linux-x64/python_files/deactivate/bash/envVars.txt
xinput
xinput enable 13
xinput enable 2
sudo apt install lowfi
sudo apt search lowfi
snap install lowfi
sudo apt install cargo
cargo install lowfi
lowfi
export CARGO_TARGET_DIR=~/cargo
cargo install lowfi
lowfi
mkdir cargo
cargo install lowfi
cargo
git clone https://github.com/talwat/lowfi
ls
cd lowfi/
ls
cd src
ls
cargo run main.rs
lowfi
cargo install main.rs
cargo install
cargo install *
lowfi
ls
cd player
ls
cargo install lowfi
/bin/python3 -m pip install ipykernel -U --user --force-reinstall
jupyter notebook
jupyter-notebook
export CARGO_TARGET_DIR=""
sudo apt purge cargo
sudo apt autoremove cargo
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
rustc --version
cargo --version
rust --version
rustc --version
cargo --version
ls
cd lowfi/
ls
cargo install
cargo build
alsa
lowfi
cd lowfi/
ls
cd src
ls
rustc main.rs
clear
ls
cd ..
ls
cargo build
alsa.pc
alsa
alsa --help
alsa --version
sudo apt install alsa-sys
cargo install alsa-sys
sudo apt-get install libasound2-dev
ls
cargo build
sudo apt-get install pkg-config
cargo clean
cargo build
export PKG_CONFIG_PATH=/path/to/alsa/lib/pkgconfig
cargo clean
cargo build
cd lowfi/
ls
cargo clean
cargo build
cargo build --verbose
sudo apt-get install libasound2-dev
pkg-config --modversion alsa
find /usr/ -name alsa.pc
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig/alsa.pc
cargo clean
cargo build
sudo apt-get install pkg-config
cd lowfi/
ls
cargo clean
cargo build
dpkg -l | grep libasound2-dev
dpkg -l | grep pkg-config
find /usr/ -name alsa.pc
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
cargo clean
cargo build
lowfi
echo 'export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig' >> ~/.bashrc
source ~/.bashrc
lowfi
cargo install lowfi
lowfi
/usr/bin/python3 -m pip install ipykernel -U --user --force-reinstall
jupyter-notebook
lowfi
sudo systemctl hibernate
sudo vim /etc/systemd/logind.conf
sudo blkid | grep swap
sudo nano /etc/default/grub
sudo nano /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo vim /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo su
clear
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo mkdir /etc/polkit-1/localauthority/50-local.d/
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo ls -r /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo mkdir -r /etc/polkit-1/localauthority/50-local.d/
sudo mkdir -f /etc/polkit-1/localauthority/50-local.d/
mkdir --help
sudo mkdir -p /etc/polkit-1/localauthority/50-local.d/
sudo ls /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
sudo vim /etc/polkit-1/localauthority/50-local.d/hibernate.pkla
journalctl -xe
sudo apt update
sudo apt upgrade
sudo apt --fix-broken install
sudo apt upgrade
ls
cd Desktop
ls
cd new
ls
cd ..
ls
cd github-repos/
ls
cd youtube_video_on_terminal/
ls
ls -la
cd ~
ls
cd Downloads/
ls
cd /
ls
cd dev
ls
cd
cd /
ls
cd media
ls
cd natsu
ls
cd d8ba997f-f460-4db2-9796-095bdb42ecd1/
ls
cd my\ projects/
ls
cd my_fastApi/
ls
cd .venv
ls
cd bin
ls
source activate
sudo apt install notion
notion
sudo apt autoremove notion
ls
ls -la
journal -xe
journaling -xe
jornaling -xe
journalctl -xe
sudo apt update
sudo apt upgrade
sudo ubuntu-drivers autoinstall
docker ps -a
docker sta
docker ps -a
docker ps 
/bin/python3 -m pip install ipykernel -U --user --force-reinstall
pipx install ipykernel -U --user --force-reinstall
pipx -i
pipx -h
pipx install ipykernel -U --user --force-reinstall
pipx install ipykernel -U --user 
ls
ls -la
jupyter-notebook
sudo systemctl hibernate
docker ps
dpkg -i mongodb-compass_1.44.5_amd64.deb 
sudo dpkg -i mongodb-compass_1.44.5_amd64.deb 
mongo-compass
mongodb-compass
docker exec -it oracle bash
git clone https://github.com/notion-enhancer/notion-repackaged.git
cd notion-repackaged
./install.sh
cd notion-repackaged
ls
./notion-repackaged.sh 
echo "deb [trusted=yes] https://apt.fury.io/notion-repackaged/ /" | sudo tee /etc/apt/sources.list.d/notion-repackaged.list
sudo apt update
sudo apt install notion-app-enhanced
sudo apt install notion-app
sudo apt purge notion-app-enhanced
notion-app
sudo apt purge notion-app
sudo apt search obsedian
sudo apt search obsidian
sudo rm /etc/apt/sources.list.d/notion-repackaged.list
sudo apt update
sudo autoremove
sudo apt autoremove
sudo apt search evernote
sudo apt search everdo
sudo systemctl hibernate
docker ps
docker exec oracle 
docker exec oracle /bin/bash
docker exec -itd oracle /bin/bash
docker exec -it oracle /bin/bash
mongosh
sustemctl start mongod
systemctl start mongod
gnupg
curl
sudo apt-get install gnupg curl
gnupg
curl -fsSL https://www.mongodb.org/static/pgp/server-8.0.asc |    sudo gpg -o /usr/share/keyrings/mongodb-server-8.0.gpg    --dearmor
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-8.0.gpg ] https://repo.mongodb.org/apt/ubuntu noble/mongodb-org/8.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-8.0.list
sudo apt update
sudo apt-get install -y mongodb-org
mongosh
sudo systemctl start mongod
mongosh
sudo systemctl daemon-reload
mongosh
sudo systemctl start mongod
mongosh
sudo systemctl enable mongod
mongosh
sudo systemctl restart mongod
mongosh
sudo apt install mongo-compass
sudo apt install mongodb-compass
journalctl -xe
sudo apt purge nvidia*
sudo apt install xserver-xorg-video-intel
sudo prime-select intel
audo apt autoremove
sudo apt autoremove
sudo apt install xserver-xorg-video-intel
sudo prime-select intel
sudo apt install prime-select
sudo apt search prime-select
sudo apt search prime
sudo apt install xserver-xorg-video-intel
lspci -k | grep -EA3 'VGA|3D|Display'
sudo nano /etc/default/grub
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
lspci -k | grep -EA3 'VGA|3D|Display'
lspci | grep -E "VGA|3D|Display"
neofech
sudo apt search neofet
sudo apt install neofetch
neofetch
sudo prime-select
sudo apt install xserver-xorg-video-intel
prime-select
sudo apt install nvidea-prime
sudo apt install nvidia-prime
sudo prime-select intel
sudo reboot
prime-select
nvidia-prime
prime-select query
sudo systemctl hibernate
brew install --cask notion
brew install notion
wget https://notion.davidbailey.codes/notion-linux.list
sudo mv notion-linux.list /etc/apt/sources.list.d/notion-linux.list
sudo apt update && sudo apt install notion-desktop
wget https://notion.davidbailey.codes/notion-linux.list
git clone https://github.com/vtenfys/notion-linux.git
cd notion-linux/
ls
cat README.md 
scripts/build.sh 
npm --version
scripts/build.sh 
scripts/package-deb.sh 
docker ps 
docker start oracle
docker ps
sudo systemctl hibernate
docker start oracle
sudo apt install update
sudo apt update
sudo apt upgrade
ubuntu-drivers devices
sudo ubuntu-drivers autoinstall
sudo prime-select intel
ubuntu-drivers devices
apt search nvidia.¿-driver
apt search nvidia-driver
sudo apt remove --purge '^nvidia-.*'
sudo apt install xserver-xorg-video-nouveau
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
sudo vim /etc/modprobe.d/nvidia-blacklist.conf
sudo update-initramfs -u
sudo reboot
sudo blkid | grep swap
sudo ubuntu-drivers install
sudo vim /etc/initramfs-tools/conf.d/resume
sudo update-initramfs -u
sudo apt upgrade
sudo reboot
sudo vim /etc/initramfs-tools/conf.d/resume
sudo update-initramfs -u
sudo reboot
journalctl
sudo ubuntu-drivers install
sudo apt update
sudo apt upgrade
sudo reboot
poweroff
sudo vim /etc/default/grub
sudo update-grub
sudo reboot
sudo systemctl hibernate
docker ps
docker start oracle
docker ps
sudo apt install nvim
sudo apt install neovim
neovim
nvim
nvim pa.py
python3 pa.py
nvim pa.py
upower -e
upower -i /org/freedesktop/UPower/devices/battery_BAT0
susdo systemctl hibernate
sudo systemctl hibernate
poweroff
docker start oracle
docker ps
lowfi
docker pull bitnami/kafka
docker ps
docker start oracle
jupyter-notebook
python3
jupyter-notebook
xinput 
xinput disable 11
xinput enable 11
xinput disable 12
xinput enable 12
cd /etc
ls
cd apt
ls
cat sources.list.d
cd sources.list.d
ls
cat mongodb-org-8.0.list 
vim mongodb-org-8.0.list 
vim ubuntu.sources
code
docker start oracle
docker exec -itd oracle bash
docker exec -itd oracle /bin/bash
docker exec -it oracle /bin/bash
docker exec -it --env TERM=xterm oracle /bin/bash
pip3 install openai
sudo apt install python3-openai
pip freeze
cd Desktop/
ls
vim nemotron_api_key.txt
nemotron.py
vim nemotron.py
python3 nemotron.py
pip install openai
ls -la
pipx install openai
python3 nemotron.py
pip --list
pip -list
pip --freeze
pip --freez
pip --freese
pip --help
pip freeze
pipx install openai
python3 nemotron.py
python -m venv test_env
source test_env/bin/activate
pip install openai
python3 nemotron.py
clear
ls
vim nemotron.py
python3 nemotron.py
vim nemotron.py
python3 nemotron.py
mv nemotron.py nemo.py
vim nemo.py
python3 nemotron.py
python3 nemo.py
vim nemo.py
python3 nemo.py
vim nemo.py
python3 nemo.py
vim nemo.py
lsusb
cat nemotron_api_key.txt 
jupyter-notebook
cd Downloads/
ls
cat penguins_classification.csv
sudo systemctl hibernate
sudo systemctl hibernate
jupyter-notebook
ls /var/log/syslog
ls -l /var/log/syslog
cat /var/log/syslog
cat .bash_history 
cat .vimrc
vim .vimrc
vim
ls
rm .vimrc
vim .vimrc
rm .vimrc
vim .vimrc
jupyter-notebook
vim test.py
cat .bash_history
wc -l .bash_history
ls
cd Desktop
ls
mkdir ml_project
ls
cd ml_project/
clear
ls
vim test.py
python3 -m venv env
source env/bin/activate
clear
python3 test.py
pip install tensorflow
python3 test.py
pip freze
pip freeze
python3 test.py
vim test.py
python3 test.py
vim test.py 
python3 test.py
vim test.py 
python3 test.py
export TF_ENABLE_ONEDNN_OPTS=0
python3 test.py
cat .bash_history
~/cat *.bash_history
cat ~/.bash_history
clear
python3 test.py
cat test.py 
python3 test.py
source env/bin/activate
clear
vim test1.py
cat .bash_history
vim test_data.txt
python3
cd Desktop
ls
cd ml_project/
ls
touch test1.py
source env/bin/activate
vim test1.py 
python3 test1.py 
vim test1.py 
python3 test1.py 
vim test.py

dpkg --verison
dpkg --version
sudo apt install dpkg
cd Downloads/
ls
sudo dpkg -i ./code_1.95.3-1731513102_amd64.deb 
exit
sudo apt isntall dpkg
dpkg
sudo apt install dpkg-deb
sudo dpkg -i libgl1-mesa-glx_22.3.6-1+deb12u1_amd64.deb 
sudo apt install tftp
sudo apt update
sudo apt install tftp tftpd-hpa
sudo dpkg -i Packet_Tracer822_amd64_signed.deb 
sudo apt install -f
sudo dpkg -i Packet_Tracer822_amd64_signed.deb 
sudo apt install openssl
sudo apt install dconf
clear
sudo apt install putty
python3 --version
pip --version
sudo apt install python3-pip
sudo systemctl start ssh
sudo apt isntall sshd
sudo systemctl enable ssh
sudo systemctl enable sshd
sudo systemctl enable ssh.service
sudo systemctl status ssh
sudo apt install openssh-server
sudo systemctl enable ssh.service
sudo systemctl start ssh.service
ifconfig
sudo apt install net-tools
ifconfig
lsblk
sudo blkid /dev/sda
ls /mnt
mkdir /mnt/data
sudo mkdir /mnt/data
sudo mount /dev/sda2 /mnt/data
sudo mount /dev/sda4 /mnt/data
cd /media
ls
cd n48i1/
ls
tree ./
sudo apt install tree
sudo mount /dev/sda2 /mnt/data
lsblk 
sudo mount /dev/sdb2 /mnt/data
sudo fuser -m /dev/sda2
sudo fuser -m /dev/sdb2
sudo kill -9 4365
sudo mount /dev/sdb2 /mnt/data
cd /media
ls
exit
cd /media
ls
cd n48i1/
ls
lsblk
cd /media/n48i1/
ls
ls -a
sudo su
sudo mount -o ro /dev/sdc2 /mnt/data
sudo nano /etc/ssl/openssl.cnf 
sudo sysemctl daemon-reloa
sudo sysemctl daemon-reload
sudo systemctl daemon-reload
cd Documents/crypto/
ls
cd OpenSSL
ls
mkdir Lab2024-2
cd Lab2024-2
openssl genersa -h
openssl genrsa -h
openssl genrsa -out fichiercle
ls
cat fichiercle 
openssl genrsa -des3 -out rsa_key.priv 1024
ls
cat rsa_key.priv 
openssl rsa -in rsa_key.priv -pubout -out rsa_key.pub
ls
cat rsa_key.pub 
openssl rsa -in rsa_key.priv -check
ls
cat rsa_key.pub
echo "Free Palestine" > fichier_clair
cat fichier_clair 
openssl rsa -in rsa_key.priv -text 
openssl rsa -in rsa_key.priv -text  -noout
openssl rsa -in rsa_key.pub -text  -noout
openssl rsa -pubin -in rsa_key.pub -text -noout
ls
openssl rsautl -encrypt -inkey rsa_key.pub -pubin -in fichier_clair -out fichier_encrypt
openssl pkeyutl -encrypt -inkey rsa_key.pub -pubin -in fichier_clair -out fichier_encrypt
cat fichier_encrypt 
openssl pkeyutl -decrypt -inkey rsa_key.priv  -in fichier_encrypt -out fichier_decrypt
cat fichier_decrypt 
ls
cat rsa_key.pub
/bin/python3 /home/n48i1/Desktop/networking/test.py
python3 test.py 
sudo apt install gnome-shell-extensions gnome-tweaks chrome-gnome-shell
sudo apt install zsh
zsh
sudo apt purge zsh
sudo apt install fish
fish
clear
fish
python3 -m venv venv
sudo apt install python3.12-venv
sudo apt install python3-pip
python3 -m venv venv
source venv/bin/activate
pip install pandas 
pip install seaborn 
pip install scikit-learn
pip install matplotlib
pip install numpy
pip install streamlit
streamlit run pfe.py 
pip install --upgrade streamlit
streamlit run pfe.py 
streamlit run machinelearningVehicule.py 
sudo dpkg -i wps-office_11.1.0.11723.XA_amd64.deb 
fish
clear
ping 192.168.1.12
ifconfig
ping fe80::93cd:e64d:c76e:d95d
ping fe80::40eb:6ff:fe80:f16d
fish
clear
lsblk
sudo fdisk -l
fdisk -l
sudo fdisk -l
clear
lsblk -l
lsblk
tree /dev
lsblk
lsblk
sudo apt install vlm2
pvcreate
lsblk
sudo umount /dev/sda1
lsblk
sudo umount /dev/sda1
sudo fdisk /dev/sda1
man fdisk
man fdisk | less
sudo fdisk /dev/sda1
sudo fdisk -l /dev/sda
sudo umount /dev/sda
sudo fdisk -l /dev/sda
sudo fdisk /dev/sda1
sudo mount /dev/sda1
lsblk
sudo mount /dev/sda1
sudo su
exit
sudo su
exit
lsblk
clear
fish
clear
lsblk
sudo fdisk /dev/sda
sudo umount /dev/sdb
sudo umount /dev/sdb1
sudo umount /dev/sda
sudo fdisk /dev/sda
chmod +x ./VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle 
sudo ./VMware-Workstation-Full-17.6.1-24319023.x86_64.bundle 
git clone https://github.com/akshatshah17/Network_Design_of_a_Company_in_Packet_Tracer.git
sudo apt install git
git clone https://github.com/akshatshah17/Network_Design_of_a_Company_in_Packet_Tracer.git
git clone https://github.com/chmuhammadasim/Computer-Networking-Project-Packet-Tracer.git
git clone https://github.com/Anas436/Campus-Network-System-Using-Cisco-Packet-Tracer.git
sudo fdisk -l
lsblk
fdisk -l
lblk
lsblk
sudo mkfs.fat -F 32 /dev/sda
lsblk
sudo umount /media/n48i1/UBUNTU\ 23_1 
sudo su
lsblk
sudo fdisk /dev/sda1
sudo fdisk /dev/sda
lsblk
sudo umount /media/n48i1/N48I1 
lsblk
sudo umount /media/n48i1/N48I1
sudo fdisk /dev/sda
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda1
sudo fdisk -l /dev/sda
sudo fdisk -l /dev/sda1
lsblk
sudo fdisk /dev/sda
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda1
sudo fdisk /dev/sda1p1
lsblk
sudo fdisk /dev/sda1
sudo partprobe /dev/sda1
lsblk
sudo partx -u /dev/sda1
lsblk
sudo fdisk -l /dev/sda1
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
sudo apt install lvm2
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
sudo fdisk -l /dev/sda1
sudo pvcreate /dev/sda1p1 /dev/sda1p2 /dev/sda1p5
lsblk
sudo fdisk -l /dev/sda
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo pvcreate /dev/sda1 /dev/sda2 /dev/sda5
sudo fdisk -l /dev/sda
sudo pvcreate /dev/sda2
sudo parted /dev/sda print
sudo fdisk /dev/sda
sudo fdisk -l /dev/sda
sudo vgcreate VG1 /dev/sda1 /dev/sd2 /dev/sda3
sudo vgcreate VG1 /dev/sda1 /dev/sda2 /dev/sda5
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda
lsblk
sudo fdisk /dev/sda1
lsblk
sudo fdisk /dev/sda
lsblk
sudo parted /dev/sda print
sudo fdisk /dev/sda1
sudo fdisk /dev/sda
sudo pvcreate  /dev/sda1 /dev/sda2 /dev/sda5
sudo vgcreate  /dev/sda1 /dev/sda2 /dev/sda5
sudo vgcreate  /dev/sda1  /dev/sda5
sudo vgcreate VG1 /dev/sda1  /dev/sda5
sudo lvcreate -L 2G -n LV1 VG1
sudo lvcreate -L 1G -n LV2 VG1
sudo mkfs.ext4 /dev/VG1/LV1
sudo mkfs.btrfs /dev/VG1/LV2
btrfs
sudo apt install btrfs-progs
sudo mkfs.btrfs /dev/VG1/LV2
mkdir ~/doss1 ~/doss2
sudo mount /dev/VG1/LV1 ~/doss1
sudo nano /etc/fstab
sudo mount -a
sudo systemctl daemon-reload
sudo mount -a
sudo nano /etc/fstab
sudo mount -a
sudo systemctl daemon-reload
lsblk
df -h
sudo lvextend -L +1G /dev/VG1/LV1
sudo resize2fs /dev/VG1/LV1
sudo lvdisplay /dev/VG1/LV1
sudo umount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo mount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo umount /home/n48i1/doss2
sudo btrfs filesystem resize -512M /dev/VG1/LV2
sudo mount /dev/VG1/LV2 /home/n48i1/doss2
sudo btrfs filesystem resize -512M /home/n48i1/doss2
sudo btrfs filesystem show /home/n48i1/doss2
sudo lvdisplay /dev/VG1/LV2
touch ~/doss1/file1 ~/doss1/file2
sudo touch ~/doss1/file1 ~/doss1/file2
sudo lvcreate -L 200M -s -n backup /dev/VG1/LV1
mkdir /home/n48i1/backup
sudo mount /dev/VG1/backup /home/n48i1/backup
ls /home/n48i1/backup
lsblk
python3
exit
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
pip3 venv my_env
python3 -m venv venv
source venv/bin/activate
pip install pandas numpy seaborn matplotlib
lsblk
nabil
sudo apt install nabil
clear
fgh
exit
brightnessctl set 50%
sudo apt install brightnessctl
sudo systemctl daemon-reload
brightnessctl set 50%
sudo brightnessctl set 50%
python
python3
exit
streamlit run main.py 
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
git init
git add .
git commit -m "first commit"
user.name
git user.name
git config --global user.name "N48I1-X"
git config --global user.email "nabil.elhilali.23@ump.ac.ma"
git remote add origin https://github.com/N48I1-X/DataDefender.git
git branch -M main
git push -u origin main
git push -u origin master
echo "# DataDefender" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/N48I1-X/DataDefender.git
git push -u origin main
git
git pull origin main
git pull origin main
git ls-remote origin
git ls-remote origin
git ls-remote origin
git pull origin main
ls
cat README.md 
git fetch origin
git checkout origin/main -- README.md
ls
cat README.md 
ls
tree
pwd
ls
cat /etc/fstab 
cat /etc/fstab 
free
zram
/etc/
cd /etc/
ls
cat sudoers
sudo cat sudeoers
sudo cat sudoers
lsblk
whatis mbr
whatis lvm
lsblk
lsblk
sudo mount /dev/sdd1 /mnt
sudo umount /mnt
sudo cp ./venv /media/n48i1/Twins
sudo cp venv /media/n48i1/Twins
sudo cp -r venv /media/n48i1/Twins
pip install scikit-learn
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
streamlit run main.py
sudo systemctl daemon-reload
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
steamlit run pfe.py 
streamlit run pfe.py 
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
python3 -m venv venv
source venv/bin/activate
pip3 install pycryptodome
cd blowfish/
python3 blowfish.py 
exit
echo "Bonjour IRSI, ceci est un message secret chiffré avec Salsa20 !" >
message.txt
echo "Bonjour IRSI, ceci est un message secret chiffré avec Salsa20 !" > message.txt
pip install pynacl
cd blowfish/
python3 salsa20_encryption.py 
pip install pycryptodome
cd Desktop/
cd ..
cd Documents/
ls
cd Projet\ Agile/
git clone https://github.com/s2n-cnit/108931-cyber-security-lab.git
git clone https://github.com/Mehedi-Hasan-Rabbi/Company-Business-System-Network-Design.git
sudo apt install git
git
/home/n48i1/Documents/crypto/venv/bin/python /home/n48i1/Documents/crypto/yield.py
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
ifconfig
docker --version
sudo apt install docker
sudo apt install docker.io
sudo docker pull kalilinux/kali-rolling
sudo docker run -it kalilinux/kali-rolling
ifconfig
ping 127.0.0.1
ping 127.17.0.2
/bin/python3 /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/printEnvVariablesToFile.py /home/n48i1/.vscode/extensions/ms-python.python-2024.20.0-linux-x64/python_files/deactivate/bash/envVars.txt
bettercap
sudo apt install bettercap
sudo bettercap
clear
cd /home
ls -la
cd n48i1/
ls -la
cat .bash_history 

clear
where python
clear
pip install -r requirements.txt
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
docker compose up -d
clear
docker compose up -d
clear
clear
git clone https://github.com/big-data-europe/docker-hadoop.git
cd docker-
cd docker-hadoop
clear
ls
docker compose up -d
docker compose down 
docker compose up -d
docker compose down
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
clear
clear
cd ..
ls 
cd hadoop_test
clear
ls
docker compose up -d
clear
docker compose up -d
docker exec -it container1 bash
clear
ls
docker compose down 
clear
docker compose up -d
docker compose down 
clear
docker-compose up --build -d
docker exec -it container1 bash\

docker compose down 
clear
docker-compose up --build -d\

docker exec -it container1 bash\

docker exec -it container2 bash
docker compose down 
clear
docker-compose up --build -d
docker exec -it container2 bash
docker exec -it container1 bash
clear
docker-compose up --build -d
docker exec -it container2 ssh user@container1\

clear
docker compose down 
clear
docker-compose up --build -d
docker exec -it container2 ssh user@container1\

clear
cd ..
clear
ls
cd docker-hadoop
clear
ls 
docker compose up -d
clear
ls
docker compose down 
docker compose up -d
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up -d
docker compose down 
docker compose down 
docker compose up -d
docker compose down 
export HADOOP_VERSION=3.3.6
wget https://archive.apache.org/dist/hadoop/common/hadoop-$HADOOP_VERSION/hadoop-$HADOOP_VERSION.tar.gz
ls
rm hadoop-3.3.6.tar.gz
ls
clear
clear
ls
docker ps
clear
docker exec -it datanode1
clear
docekr exec -it datanode1 bash
docker exec -it datanode1 bash
clear
docker exec -it datanode2 bash
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode1 bash
clear
docker exec -it datanode1 bash
clear
exit
clear
docker exec -it datanode1 bash
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
docker exec -it datanode1 bash
docker exec -it datanode2 bash
ls
cdlear
ls
clear
ls
clear
ls
docker build -t hadoop-cluster .
clear
docker build -t hadoop-cluster .
ls
clear
docker compose up -d
clear
docker compose down 
clear
docker compose up -d
clear
docker compose ps
docker-compose ps
clear
clear
clear
docker build -t hadoop-cluster .
docker compose down 
clear
docker compose up -d
docker compose ps
docker exec -it namenode bash
clear
docker compose down
clear
docker compose up -d
clear
docker compose ps
clear
docker exec -it namenode bash
clear
clear
docker exec -it namenode bash
clear
docker compose down 
clear
clear
clear
history
clear
docker build -t hadoop-cluster .
docker compose up -d
docker exec -it namenode bash
docker --version
clear
docker compose ps
clear
docker exec -it datanode1 bash
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
cler
clear
clear
ls
docker compose start 
clear
docker exec -it namenode bash
docker compose down 
clear
clear
clear
docker compose up -d
clear
docker exec -it namenode
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
exit
docker exec -it datanode1 bash
exit
docker exec -it datanode2 bash
clear
exit
clear
clear
ls
cd /
ls
clear
cd etc
ls
cat hosts
vim hosts
clear
sudo vim hosts
clear
docker exec -it datanode2 bash
clear
ping -c 3 192.168.0.130
clear
ssh oussama@192.168.0.130
clear
cd Do
cd Downloads
clear
ls
scp ./apache-hive-4.0.1-bin.tar.gz oussama@192.168.0.130:/home/oussama
clear
ls
clear
scp mysql-connector-j-9.1.0.tar.gz oussama@192.168.0.130:/home/oussama
clear
clear
ls
clear
ip a
ifconfig
hostname
sudo systemctl status ssh
clear
clear
ls
scp hive-site.xml oussama@192.168.0.130:/home/oussama
clear
sudo systemsetup -getremotelogin
hostname
vim to_ubuntu.txt
scp to_ubuntu.txt oussama@192.168.0.130:/home/oussama
vim to_ubuntu.txt
scp to_ubuntu.txt oussama@192.168.0.130:/home/oussama
cd Downloads
clear
ls
clear
scp apache-hive-3.1.3-bin.tar.gz oussama@192.168.0.130:/home/oussama
scp apache-hive-3.1.3-bin.tar.gz oussama@192.168.1.19:/home/oussama
ls
clear
vim to_ubuntu.txt
cd Downloads
clear
cat to_ubuntu.txt
cat to_ubuntu.txt
clear
scp to_ubuntu.txt oussama@192.168.1.19:/home/oussama
clear
ls ~/PycharmProjects/prices-predictor-system/data/archive.zip
docker build -t hadoop-cluster .
clear
ls
clear
docker compose up -d
clear
docker exec -it namenode bash
clear
docker compose down
clear
docker build -t hadoop-cluster .
clear
docker compose up -d
clear
clear
clear
clear
clear
clear
clear
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker compose stop
docker compose start
docker exec -it namenode bash
clear
docker compose stop
clear
clear
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
clear
clear
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/main.py"
clear
ls
docker compose start
clear
docker exec -it namenode bash
clear
docker cp ./WordCount.jar namenode:/root/WordCount.jar
docker cp ./input.txt namenode:/root/input.txt
clear
docker exec -it namenode bash
clear
docker cp ./WordCount.jar namenode:/root/WordCount.jar
docker exec -it namenode bash
docker cp ./WordCount.jar namenode:/root/WordCount.jar
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker cp ./input.txt namenode:/root/input.txt
docker exec -it namenode bash
docker compose stop
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
python -u "/Users/alaoui/Projects/docker/Hadoop/test_map_red.py"
zenml up
export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
zenml up
pip install "zenml[server]==0.64.0"
zenml up
zenml stack describe
zenml integration install mlflow -y \

zenml integration install mlflow -y
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ifconfig
clear
hostname
sudo systemsetup -getremotelogin\

clear
ls
clear
ls
clear
ifconfig
ip a
clear
ip a
clear
ifconfig
clear
ls
clear
ping -c 3 192.168.1.19
clear
clear
clear
docker exec -it postgres-hive bash
clear
exit
docker exec -it namenode bash
clear
exit
docker exec -it namenode bash
clear
ls
clear
exit
docker exec -it namenode bash
exit
docker exec -it namenode bash
clear
exit
docker exec -it namenode bash
exit
clear
clear
clear
docker compose start
docker compose down 
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker compose up -d
docker exec -it postgres-hive bash
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up 
docker compose start
clear
ls
clear
docker exec -it namenode bash
clear
docker compose down 
clear
docker compose up -d
clear
docker exec -it namenode bash
docker cp ./config/hive-site.xml namenode:/
docker exec -it namenode bash
clear
docker compose down
clear
clear
clear
clear
clear
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker exec -it namenode bash
clear
docker cp ./config/hive-site.xml namenode:/
docker exec -it namenode bash
clear
docker compose down 
clear
clear
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker exec -it namenode bash
clear
docker compose down 
clear
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker compose down
clear
docker compose up -d
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker cp config/mapred-site.xml namenode:/
docker exec -it namenode bash
clear
ping -c 3 192.168.0.143
cler
clear
clear
ls
clear
docker exec -it namenode bash
exit
docker exec -it hive-metastore mysql -u hive -p
exit
docker exec -it namenode bash
docker compose down
clear
docker build -t hadoop-cluster .
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
docker compose up -d
docker compose down
clear
docker compose up -d
docker exec -it hive-metastore bash
clear
docker exec -it hive-metastore bash
docker exec -it mysql-hive mysql -u root -p\

docker exec -it hive-metastore mysql -u root -p\

clear
docker compose stop
ifconfig
clear
docker compose start
docker exec -it namenode bash
docker compose down
clear
export HIVE_VERSION=3.1.3
docker run -d -p 10000:10000 -p 10002:10002 --env SERVICE_NAME=hiveserver2 --name hive4 apache/hive:${HIVE_VERSION}
docker exec -it hive4 bash
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
hostname
clear
docker build -f Dockerfile.hive -t hive-image .
docker compose up -d
docker exec -it mysql-hive mysql -u root -p
docker exec -it hive-metastore mysql -u root -p
clear
docker exec -it namenode bash
clear
docker compose down;
clear
clear
clear
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ping -c 3 192.168.1.115
clear
ls
clear
cd Downloads
clear
ls
clear
scp -r hadoop root@192.168.1.115:/
clear
scp -r hadoop root@192.168.1.115:/
scp -r hadoop oussama@192.168.1.115:/home/oussama
clear
tar -cvf hadoop.tar ./hadoop
clear
scp hadoop.tar oussama@192.168.1.115:/home/oussama/hadoop.tar
tar -cvf hive.tar ./hive
clear
clear
scp /Users/alaoui/Projects/docker/Hadoop/hadoop.env oussama@192.168.1.115:/home/oussama/hadoop.env
clear
cd Downloads
scp hive.tar oussama@192.168.1.115:/home/oussama
cd mysql-connector-j-9.1.0
ls
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.115:/home/oussama
clear
docker exec -it namenode bash
clera
clear
docker exec -it namenode bash
clear
exit
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
cd Downloads
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
cd mysql-connector-j-9.1.0
scp mysql-connector-j-9.1.0.jar oussama@192.168.1.141:/home/oussama
clear
cd ../..
clear
cd Downloads
scp hive.tar oussama@192.168.1.141:/home/oussama
scp /Users/alaoui/Projects/docker/Hadoop/hadoop.env oussama@192.168.1.141:/home/oussama/hadoop.env
scp hadoop.tar oussama@192.168.1.141:/home/oussama/hadoop.tar
ssh root@localhost -p 23
clear
ssh oussama@localhost -p 23
clear
clear
exit
clear
clear
docker compose up -d
docker exec -it hive-metastore bash
clear
ls
clear
docker exec -it namenode bash
clear
clear
docker compose up -d
docker compose down 
clear
docker compose down 
clear
docker compose up -d
docker exec -it postgres /bin/bash
docker restart postgres\

clear
docker restart metastore-standalone
clear
docker run -d -p 9083:9083 --env SERVICE_NAME=metastore --name metastore-standalone apache/hive:3.1.3
clear
docker compose down 
clear
docker run -d -p 9083:9083 --env SERVICE_NAME=metastore --name metastore-standalone apache/hive:3.1.3
docker exec -it  metastore-standalone bash
docker compose up -d
docker compose down
clear
clear
docker compose up -d
clear
clear
clear
clear
clear
docker exec -it namenode bash
clear
docker compose down
clear
docker compose up -d
docker exec -it namenode bash
clear
clear
docker compose down 
docker compose up -d
clear
ls
clear
docker compose ps
docker exec -it hive-metastore mysql -u root -p
docker exec -it hive-metastore mysql -u hive -p
clear
docker exec -it namenode bash
exit
docker compose down ;
clear
clear
clear
clear
docker run -d ubuntu:22.04
clear
docker run -d ubuntu sleep infinity
clear
clear
docker stop c9385ef3b417b3deff88a3fe18b08bcd38424832bcbbcbd92f7639cbf9699c11
clear
docker rm c9385ef3b417b3deff88a3fe18b08bcd38424832bcbbcbd92f7639cbf9699c11
clear
docker run -d -p 23:22 ubuntu sleep infinity
docker exec -it e8ba6afa2c08b9b29d94bd1e72e02b60d899995e742e8694fae1954e34e9108c bash
clear
docker rm -f e8ba6afa2c08b9b29d94bd1e72e02b60d899995e742e8694fae1954e34e9108c
clear
docker run -d -p 23:22 ubuntu sleep infinity
docker exec -it lucid_canon bash
docker exec -it lucid_cannon bash
clear
clear
docker rm -f lucid_cannon
clear
clear
docker run -d -p 23:22 --name test_hadoop ubuntu sleep infinity
clear
docker exec -it test_hadoop bash
clear
cd /Users/alaoui/Downloads
clear
cd /Users/alaoui/from_vm_to_container
clear
ls
tar -cvf hadoop-3.3.6
tar -cvf hadoop-3.3.6.tar hadoop-3.3.6
clear
ls
docker cp hadoop-3.3.6.tar test_hadoop:/
clear
clear
ls
docker cp bashrc test_hadoop:/
clear
docker exec -it test_hadoop bash
clear
docker stop test_hadoop 
clear
docker exec -it test_hadoop bash
clear
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker exec -it test_hadoop bash
clear
docker rm -r test_hadoop
docker rm -f test_hadoop
clear
docker run -d --name test_hadoop ubuntu sleep infinity
docker exec -it test_hadoop bash
clear
cd /Users/alaoui/from_vm_to_container
ls
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker cp hadoop-3.3.6.tar test_hadoop:/
clear
ls
tar -cvf hive.tar hive
ls
clear
ls
docker cp hive.tar test_hadoop:/
docker exec -it test_ubuntu bash
docker exec -it test_hadoop bash
docker exec -it test_ubuntu bash
docker exec -it test_hadoop bash
docker compose up -d
clear
docker exec -it hive-metastore mysql -u root -p
clear
exit
clear
docker network create my_network
docker network ps
clear
docker run -d \\
  --name mysql-container \\
  --network my_network \\
  -e MYSQL_ROOT_PASSWORD=root \\
  -e MYSQL_DATABASE=metastore \\
  -e MYSQL_USER=hive \\
  -e MYSQL_PASSWORD=password \\
  mysql:latest
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
clear
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
clear
docker run -it \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest
docker run -d \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
docker run -d \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest time infinity
docker run -dit \\
  --name ubuntu-container \\
  --network my_network \\
  ubuntu:latest\

docker rm -f ubuntu-container
docker run -dit \\
  --name test_hadoop \\
  --network my_network \\
  ubuntu:latest\

clear
clear
cd /Users/alaoui/from_vm_to_container 
docker cp '/Users/alaoui/from_vm_to_container/bashrc' test_hadoop:/
docker cp hadoop-3.3.6.tar test_hadoop:/
docker cp hive.tar test_hadoop:/
docker exec -it test_hadoop bash
clear
docker exec -it mysql-container mysql -u hive -p
docker exec -it mysql-container mysql -u root -p
clear
docker exec -it test_hadoop bash
clear
docker exec -it mysql-container mysql -u root -p
docker exec -it test_hadoop bash
docker rm -f test_hadoop
docker rm -f mysql-container
docker network ls
docker network inspect none
docker network inspect hadoop_hadoop-hive-network
docker network inspect my_network
l 
ls
ls
clear
clear
cd Projects/Python/SciDataViz
clear
ls
git status
l
echo hello, world
clear
ls -1
ls -1
ls --color=auto\

export LS_COLORS="di=0;34:fi=0;32"
ls
ls --color=auto
ls --color=auto
export LS_COLORS="di=0;34:fi=0;32"
ls
clear
ls -G
export LSCOLORS=ExFxBxDxCxegedabagacad
ls
ls -G
clear
export CLICOLOR=1\
export LSCOLORS=GxFxCxDxBxegedabagaced\
alias ls='ls -G'
ls
clear
ls
clear
ls
cd PycharmProjects
ls
cd chess_game_with_python
ls
clear
ls -l
ls
clear
ls -a /
sudo find / -type f -name "*.py" 2>/dev/null
ls
tmux
clear
ls
clear
clear
ls
clear
cd /Users/alaoui/Projects/Python/SciDataViz
clear
ls
ls -G
l
l -G
sudo visudo
clear
clear
docker compose ps
clear
docker p
docker compose ps
docker ps
hostname
exit
brew tap mongodb/brew
docker compose up -d
docker exec -it namenode bash
docker compose down 
docker compose up -d
docker exec -it namenode bash
docker compose down 
docker build -f Dockerfile -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
docker build -f Dockerfile.hive -t hive-image .
clear
docker build -f Dockerfile.hive -t hive-image .
clear
ls
touch test
mv -v test test1
clear
clear
docker build -f Dockerfile.hive -t hive-image .
clear
docker compose up -d
clear
docker exec -it namenode bash
clear
docker exec -it namenode bash
docker compose stop 
cler
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile_v2 -t hadoop-node .
clear
clear
clear
clear
clear
clear
clear
clear
clear
clear
clear
cler
clear
clear
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker build -f Dockerfile_v2 -t hadoop-node .
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker compose down
docker compose up -d
docker compose down
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile.hive_v2 -t hive-node .
clear
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose up -d
clear
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker compose down
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose up -d
docker compose down 
docker compose up -d
clear
docker build -f Dockerfile_v2 -t hadoop-node .
docker build -f Dockerfile.hive_v2 -t hive-node .
docker compose down
docker compose up -d
docker exec -it namenode bash
docker exec -it metastore_db mysql -u root -p
docker exec -it hive- metastore mysql -u root -p
clear
docker exec -it hive-metastore mysql -u root -p
docker exec -it hive-metastore mysql -u root -p
clear
docker exec -it hive-metastore mysql -u root -p
clear
clear
docker exec -it namenode bash
docker compose stop
docker compose start
clear
docker compose stop
docker compose start
docker inspect namenode
clear
ping -c 3 172.24.0.3
clear
hostname
clear
ping -c 3 172.24.0.3
clear
docker inspect namenode
clear
docker compose stop
docker pull mongo
brew tap mongodb/brew
docker compose up -d
clear
docker compose up -d
docker compose start
docker exec -it mongodb bash
clear
docker exec -it mongodb bash
docker cp films.json mongodb:/
docker exec -it mongodb bash
clear
docker cp artistes_mongo.json mongodb:/
docker exec -it mongodb bash
brew update
brew install mongodb-community@8.0
netstat -anlp | grep 27017
netstat  | grep 27017
netstat
brew services restart mongodb/brew/mongodb-community
/bin/python3 "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/tempCodeRunnerFile.py"
clear
clearpython -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/tempCodeRunnerFile.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clearpython -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
python -u "/Users/alaoui/Projects/Mongodb/main.py"
clear
python -u "/Users/alaoui/Projects/Mongodb/main.py"
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
python -u "/Users/alaoui/Projects/Python/tests/test.py"
clear
pi 
pip install graphviz
python -u "/Users/alaoui/Projects/Python/tests/test.py"
clear
python -u "/Users/alaoui/Projects/Python/tests/test.py"
python -u "/Users/alaoui/Projects/Python/tests/tempCodeRunnerFile.py"
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
pip install manim
pip install manim
/usr/local/bin/python3 /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/printEnvVariablesToFile.py /Users/alaoui/.vscode/extensions/ms-python.python-2024.5.11021008/python_files/deactivate/zsh/envVars.txt
ps | grep mongo
brew services list
mongosh
clear
mongosh
clear
mongosh
clear
mongosh
exit

sudo apt update && sudo apt upgrade  
sudo apt install python3-pip -y  
pip3 install flask  
mkdir ~/flask_app && cd ~/flask_app  
touch app.py  
echo "print('Hello, Flask!')" > app.py  
python3 app.py  
sudo apt-get remove python3-minimal  
sudo dpkg --configure -a  
sudo apt install git-all  
git config --global user.name "example_user"  
git config --global user.email "example_user@example.com"  
git log --oneline  
sudo apt install curl -y  
curl -O https://example.com/sample.txt  
cat sample.txt  
rm sample.txt  
wget https://example.com/file.zip  
unzip file.zip -d ~/downloads/  
sudo mv ~/downloads/file /usr/local/bin/  
chmod 755 /usr/local/bin/file  
ls -lh /usr/local/bin/  
sudo apt install htop -y  
htop  
sudo systemctl restart ssh  
sudo systemctl status apache2  
sudo apt install apache2 php libapache2-mod-php -y  
sudo systemctl enable apache2  
php -v  
nano /var/www/html/index.php  
sudo chmod 755 /var/www/html/index.php  
sudo apt install composer  
composer create-project laravel/laravel myapp  
cd myapp && php artisan serve  
sudo apt install mariadb-server  
sudo mysql -u root -p  
CREATE USER 'new_user'@'localhost' IDENTIFIED BY 'password';  
GRANT ALL PRIVILEGES ON *.* TO 'new_user'@'localhost';  
FLUSH PRIVILEGES;  
sudo apt install ruby ruby-dev  
gem install jekyll bundler  
jekyll new blog  
cd blog && bundle exec jekyll serve  
sudo apt install openvpn  
sudo openvpn --config client.ovpn  
sudo apt install tmux  
tmux new -s mysession  
tmux ls  
tmux attach -t mysession  
tmux kill-session -t mysession  
cd ~/projects/  
mkdir new_project && cd new_project  
touch README.md  
echo "# New Project" > README.md  
sudo apt install tree -y  
tree ~/projects  
sudo apt install docker-compose  
docker-compose up -d  
docker-compose down  
docker volume ls  
docker network ls  
docker exec -it my_container bash  
sudo apt-get install clang -y  
clang++ -o app app.cpp  
./app  
gdb app  
break main  
run  
print var1  
quit  
sudo apt-get install cmake -y  
cmake .. && make  
sudo make install  
sudo apt install kubectl  
kubectl get pods  
kubectl create deployment nginx --image=nginx  
kubectl expose deployment nginx --type=LoadBalancer --port=80  
kubectl delete service nginx  
sudo apt install snapd  
sudo snap install spotify  
snap list  
sudo snap refresh  
snap remove spotify  
cd /etc/systemd/  
ls  
sudo nano system.conf  
sudo systemctl daemon-reload  
sudo apt install samba  
sudo nano /etc/samba/smb.conf  
sudo smbpasswd -a user  
sudo systemctl restart smbd  
sudo apt install vim  
vim /home/user/.vimrc  
echo 'syntax on' >> ~/.vimrc  
sudo apt install screenfetch  
screenfetch  
sudo apt install cowsay  
cowsay "Hello World!"  
sudo apt install fortune  
fortune | cowsay  
sudo apt-get install figlet  
figlet "Hello, World!"  

sudo apt update  
sudo apt upgrade -y  
apt-cache policy git  
sudo apt install build-essential  
apt-get remove docker.io  
sudo apt autoremove -y  
ls -l /usr/local/bin  
sudo cp ~/Downloads/software.tar.gz /opt/tools/  
tar -xzvf /opt/tools/software.tar.gz  
cd /opt/tools/software  
./install.sh  
sudo ln -s /usr/local/bin/mytool /usr/bin/mytool  
sudo systemctl restart apache2  
sudo apt install apache2-utils  
sudo apt install snapd  
snap install code --classic  
sudo snap refresh  
sudo add-apt-repository ppa:deadsnakes/ppa  
sudo apt install python3.10  
python3.10 --version  
pip3 install --upgrade pip  
pip3 install virtualenv  
virtualenv myenv  
source myenv/bin/activate  
deactivate  
sudo apt install nodejs npm  
node -v  
npm install -g yarn  
sudo yarn add react  
mkdir my_project && cd my_project  
git init  
git clone https://github.com/example/example-repo.git  
git checkout -b feature-branch  
git merge main  
git pull  
git push origin feature-branch  
rm -rf old_project/  
cp -r new_project/ /home/user/projects/  
sudo chown -R user:group /home/user/projects/  
chmod +x /home/user/projects/run.sh  
./run.sh  
df -h  
du -sh /home/user/projects/  
sudo apt install gnome-tweak-tool  
sudo apt remove --purge libreoffice*  
sudo apt-get clean  
sudo find / -type f -name "*.log"  
sudo rm /var/log/apache2/error.log  
sudo apt install g++  
g++ -o my_program main.cpp  
./my_program  
sudo apt-get install cmake  
cmake .  
make && sudo make install  
sudo apt install mysql-server  
sudo systemctl start mysql  
sudo mysql_secure_installation  
mysql -u root -p  
CREATE DATABASE mydb;  
USE mydb;  
SHOW TABLES;  
sudo apt install redis-server  
sudo systemctl enable redis  
redis-cli ping  
docker ps -a  
docker start my_container  
docker stop my_container  
docker rm my_container  
docker images  
docker pull ubuntu:latest  
docker run -it ubuntu bash  
vim ~/.bashrc  
source ~/.bashrc  
alias ll='ls -la'  
unalias ll  
history  
clear  
sudo apt install zsh  
chsh -s /bin/zsh  
zsh --version  
echo $SHELL  
grep 'error' /var/log/syslog  
awk '{print $1, $2}' /var/log/syslog  
cut -d':' -f2 /etc/passwd  
sort /etc/passwd | uniq  
find /home/user/ -type f -size +10M  

sudo apt update
sudo apt upgrade
apt list --upgradable
sudo apt install --upgrade python3
sudo apt install libssl-dev
sudo apt install git curl
sudo apt install nginx -y
apt-cache search openjdk
sudo apt install openjdk-11-jdk
sudo systemctl restart nginx
sudo apt remove python2
sudo apt autoremove
sudo apt install htop
clear
sudo systemctl status nginx
sudo apt install tree
sudo mkdir /opt/software
sudo cp ~/downloads/myapp.tar.gz /opt/software/
tar -xzvf /opt/software/myapp.tar.gz
cd /opt/software/myapp
./configure
make
sudo make install
java -version
python3 --version
git clone https://github.com/example/repo.git
cd repo
git pull origin main
sudo apt install docker.io
sudo docker run -it ubuntu bash
apt search postgresql
sudo apt install postgresql postgresql-contrib
sudo systemctl enable postgresql
sudo systemctl start postgresql
sudo apt-get install curl -y
pip3 install requests
pip3 install pandas
pip3 install matplotlib
ls -la
cd /etc
nano sources.list
sudo apt update && sudo apt upgrade -y
sudo apt install net-tools
ifconfig
sudo apt install vim
sudo vim /etc/fstab
sudo apt install neofetch
neofetch

sudo apt update  
sudo apt upgrade  
apt list --upgradable  
sudo apt upgrade python3 -y  
python --version  
python3 --version  
oops, wrong command  
python --version  # Checking again just in case  
sudo apt install vim  
vim test_file.txt  
:wq  # Didn't save properly last time  
cat test_file.txt  
sudo apt install git  
git init  
git config --global user.name "example_user"  
git config --global user.email "example@example.com"  
git remote add origin https://github.com/example/repo.git  
git status  
git add .  
git commit -m "Initial commit"  
git push origin main  
oops! forgot credentials  
git push origin main  
sudo apt install curl -y  
curl -O https://example.com/sample.txt  
ls  
cat sample.txt  
rm sample.txt  
wget https://example.com/archive.zip  
unzip archive.zip  
sudo mv archive /usr/local/bin/  
chmod +x /usr/local/bin/archive  
ls -lh /usr/local/bin/  
python3 script.py  
sudo apt install python3-pip  
pip install flask  
pip install requests  
python3 flask_app.py  
Ctrl+C  # Killed it, will rerun after changes  
vim flask_app.py  
python3 flask_app.py  
sudo apt install docker.io  
docker pull ubuntu:latest  
docker run -it ubuntu bash  
exit  
docker ps -a  
docker rm $(docker ps -aq)  
docker images  
sudo apt install tree  
tree ~/projects  
sudo apt install htop  
htop  
sudo systemctl restart apache2  
systemctl status apache2  # Missed sudo!  
sudo systemctl status apache2  
sudo apt install mysql-server  
sudo mysql_secure_installation  
mysql -u root -p  
CREATE DATABASE mydb;  
USE mydb;  
SHOW TABLES;  
sudo apt install nodejs npm  
node -v  
npm install -g create-react-app  
create-react-app my-react-app  
cd my-react-app  
npm start   
vim App.js  
npm start  
sudo apt install tmux  
tmux new -s work  
tmux ls  
tmux attach -t work  
tmux kill-session -t work  
sudo apt install neofetch  
neofetch  
sudo apt install cowsay  
cowsay "I love Linux!"  
sudo apt install fortune  
fortune | cowsay  
sudo apt install snapd  
sudo snap install code --classic  
code .  # Launching VS Code  
Ctrl+Shift+P  # Found a feature in VS Code  
sudo apt install ruby  
gem install jekyll bundler  
jekyll new blog  
cd blog  
bundle exec jekyll serve   
vim _config.yml  
bundle exec jekyll serve  
sudo apt-get remove unused-software  
sudo apt autoremove  
history | grep "apt"  # Looking for recent package installs  
sudo apt upgrade --dry-run  
